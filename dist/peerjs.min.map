{"version":3,"sources":["../node_modules/js-binarypack/lib/bufferbuilder.js","../node_modules/js-binarypack/lib/binarypack.js","adapter.ts","util.ts","../node_modules/eventemitter3/index.js","socket.ts","negotiator.ts","mediaconnection.ts","../node_modules/reliable/lib/util.js","../node_modules/reliable/lib/reliable.js","dataconnection.ts","peer.ts","exports.ts"],"names":[],"mappings":";AAAA,IAAA,EAAA,GACA,EAAA,eAAA,WACA,IAEA,OADA,IAAA,KAAA,KACA,EACA,MAAA,GACA,OAAA,GALA,GASA,EAAA,oBAAA,EAAA,gBAAA,WACA,IACA,OAAA,IAAA,IAAA,KAAA,CAAA,IAAA,WAAA,MAAA,KACA,MAAA,GACA,OAAA,GAJA,GAQA,OAAA,QAAA,eAAA,EACA,IAAA,EAAA,OAAA,QAAA,YAMA,SAAA,IACA,KAAA,QAAA,GACA,KAAA,OAAA,GAPA,oBAAA,SACA,EAAA,OAAA,QAAA,YAAA,OAAA,mBACA,OAAA,gBAAA,OAAA,eAAA,OAAA,aAQA,EAAA,UAAA,OAAA,SAAA,GACA,iBAAA,EACA,KAAA,QAAA,KAAA,IAEA,KAAA,QACA,KAAA,OAAA,KAAA,KAIA,EAAA,UAAA,MAAA,WACA,GAAA,KAAA,QAAA,OAAA,EAAA,CACA,IAAA,EAAA,IAAA,WAAA,KAAA,SACA,EAAA,qBACA,EAAA,EAAA,QAEA,KAAA,OAAA,KAAA,GACA,KAAA,QAAA,KAIA,EAAA,UAAA,UAAA,WAEA,GADA,KAAA,QACA,EAAA,eAAA,CAEA,IADA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,KAAA,OAAA,OAAA,EAAA,EAAA,IACA,EAAA,OAAA,KAAA,OAAA,IAEA,OAAA,EAAA,UAEA,OAAA,IAAA,KAAA,KAAA,SAIA,OAAA,QAAA,cAAA;;AC/DA,IAAA,EAAA,QAAA,mBAAA,cACA,EAAA,QAAA,mBAAA,eAEA,EAAA,CACA,OAAA,SAAA,GAEA,OADA,IAAA,EAAA,GACA,UAEA,KAAA,SAAA,GACA,IAAA,EAAA,IAAA,EAGA,OAFA,EAAA,KAAA,GACA,EAAA,cAOA,SAAA,EAAA,GAEA,KAAA,MAAA,EACA,KAAA,WAAA,EACA,KAAA,SAAA,IAAA,WAAA,KAAA,YACA,KAAA,OAAA,KAAA,WAAA,WAwOA,SAAA,IACA,KAAA,cAAA,IAAA,EAqPA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,WAAA,GAEA,OAAA,GAAA,KAAA,KACA,GAAA,MAAA,MACA,GAAA,QAAA,OACA,GAAA,SAAA,QACA,SAGA,SAAA,EAAA,GACA,OAAA,EAAA,OAAA,IAEA,IAAA,KAAA,CAAA,IAAA,KAEA,EAAA,QAAA,oBAAA,GAAA,OApfA,OAAA,QAAA,EAUA,EAAA,UAAA,OAAA,WACA,IAQA,EARA,EAAA,KAAA,eACA,GAAA,EAAA,IAEA,OADA,EAEA,IAAA,IAAA,GAAA,GAEA,OADA,IAAA,GAAA,GAIA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,WAAA,GACA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,cAAA,GACA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,aAAA,GACA,IAAA,EAAA,IAAA,IAAA,GACA,OAAA,KAAA,WAAA,GAEA,OAAA,GACA,KAAA,IACA,OAAA,KACA,KAAA,IACA,OACA,KAAA,IACA,OAAA,EACA,KAAA,IACA,OAAA,EACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,gBACA,KAAA,IACA,OAAA,KAAA,cACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IACA,OAAA,KAAA,eACA,KAAA,IAEA,KAAA,IAEA,KAAA,IAEA,KAAA,IACA,OACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,cAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,cAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,aAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,aAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,GACA,KAAA,IAEA,OADA,EAAA,KAAA,gBACA,KAAA,WAAA,KAIA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,IAAA,KAAA,SAAA,KAAA,OAEA,OADA,KAAA,QACA,GAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,KAAA,GACA,EACA,KAAA,IAAA,EAAA,KAAA,IAAA,EAAA,IAEA,OADA,KAAA,OAAA,EACA,GAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,KAAA,GACA,EAGA,KADA,KADA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IACA,EAAA,GAEA,OADA,KAAA,OAAA,EACA,GAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,KAAA,GACA,EAOA,KADA,KADA,KADA,KADA,KADA,KADA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,GAEA,OADA,KAAA,OAAA,EACA,GAIA,EAAA,UAAA,YAAA,WACA,IAAA,EAAA,KAAA,eACA,OAAA,EAAA,IAAA,EAAA,EAAA,KAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBACA,OAAA,EAAA,MAAA,EAAA,EAAA,OAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBACA,OAAA,EAAA,KAAA,IAAA,EAAA,IAAA,EACA,EAAA,KAAA,IAAA,EAAA,KAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBACA,OAAA,EAAA,KAAA,IAAA,EAAA,IAAA,EACA,EAAA,KAAA,IAAA,EAAA,KAGA,EAAA,UAAA,WAAA,SAAA,GACA,GAAA,KAAA,OAAA,KAAA,MAAA,EACA,MAAA,IAAA,MAAA,4CACA,KAAA,MAAA,IAAA,EAAA,IAAA,KAAA,QAEA,IAAA,EAAA,KAAA,WAAA,MAAA,KAAA,MAAA,KAAA,MAAA,GAKA,OAJA,KAAA,OAAA,EAIA,GAGA,EAAA,UAAA,cAAA,SAAA,GAGA,IAFA,IACA,EAAA,EADA,EAAA,KAAA,KAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,IACA,EAAA,EAAA,IACA,KACA,GAAA,OAAA,aAAA,GACA,MACA,IAAA,GAAA,IACA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GACA,GAAA,OAAA,aAAA,GACA,GAAA,IAEA,GAAA,GAAA,IAAA,IAAA,GAAA,EAAA,EAAA,KAAA,EACA,GAAA,EAAA,EAAA,GACA,GAAA,OAAA,aAAA,GACA,GAAA,GAIA,OADA,KAAA,OAAA,EACA,GAGA,EAAA,UAAA,aAAA,SAAA,GAEA,IADA,IAAA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,KAAA,SAEA,OAAA,GAGA,EAAA,UAAA,WAAA,SAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAAA,CACA,IAAA,EAAA,KAAA,SACA,EAAA,KAAA,SACA,EAAA,GAAA,EAEA,OAAA,GAGA,EAAA,UAAA,aAAA,WACA,IAAA,EAAA,KAAA,gBAEA,GAAA,GAAA,GAAA,KAAA,IAEA,OAAA,GAHA,GAAA,GAGA,GAAA,IADA,QAAA,EAAA,SAEA,KAAA,IAAA,EAAA,EAAA,KAGA,EAAA,UAAA,cAAA,WACA,IAAA,EAAA,KAAA,gBACA,EAAA,KAAA,gBAEA,GAAA,GAAA,GAAA,MAAA,KAIA,OAAA,GALA,GAAA,GAKA,GAAA,KAHA,QAAA,EAAA,SACA,KAAA,IAAA,EAAA,EAAA,IACA,EAAA,KAAA,IAAA,EAAA,EAAA,MAIA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,KAAA,MACA,GAAA,EAAA,GAAA,KAAA,OACA,OAAA,KAAA,SAAA,SAAA,EAAA,EAAA,GAEA,MAAA,IAAA,MAAA,+CAQA,EAAA,UAAA,UAAA,WACA,OAAA,KAAA,cAAA,aAGA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,SAAA,EACA,GAAA,UAAA,EACA,KAAA,YAAA,QACA,GAAA,UAAA,EACA,KAAA,MAAA,KAAA,EACA,KAAA,aAAA,GAEA,KAAA,YAAA,QAEA,GAAA,WAAA,GACA,IAAA,EACA,KAAA,cAAA,OAAA,MACA,IAAA,GACA,KAAA,cAAA,OAAA,UAEA,GAAA,aAAA,EACA,KAAA,cAAA,OAAA,SACA,CAAA,GAAA,UAAA,EAgCA,MAAA,IAAA,MAAA,SAAA,EAAA,uBA/BA,GAAA,OAAA,EACA,KAAA,cAAA,OAAA,SACA,CACA,IAAA,EAAA,EAAA,YACA,GAAA,GAAA,MACA,KAAA,WAAA,QACA,GAAA,GAAA,MAAA,GAAA,KACA,KAAA,SAAA,QACA,GAAA,GAAA,YACA,EAAA,mBACA,KAAA,SAAA,IAAA,WAAA,IAEA,KAAA,SAAA,QAEA,GAAA,sBAAA,EACA,EAAA,mBACA,KAAA,SAAA,IAAA,WAAA,EAAA,SAEA,KAAA,SAAA,EAAA,aAEA,GAAA,GAAA,OACA,KAAA,YAAA,QACA,GAAA,GAAA,KACA,KAAA,YAAA,EAAA,gBACA,CAAA,GAAA,mBAAA,EAAA,aAGA,MAAA,IAAA,MAAA,SAAA,EAAA,WAAA,uBAFA,KAAA,cAAA,OAAA,EAAA,kBAQA,KAAA,cAAA,SAIA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,EAAA,QAAA,EAAA,YAAA,EAAA,KACA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,KAAA,cAAA,OAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,GAEA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,KAAA,cAAA,OAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,KAAA,KAAA,EAAA,KAIA,EAAA,UAAA,aAAA,SAAA,GACA,IAAA,IAAA,GAAA,GAAA,IACA,KAAA,cAAA,OAAA,IAAA,QACA,GAAA,GAAA,GAAA,GAAA,IACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,QACA,IAAA,KAAA,GAAA,GAAA,IACA,KAAA,cAAA,OAAA,KACA,KAAA,UAAA,QACA,GAAA,GAAA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,QACA,IAAA,OAAA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,QACA,GAAA,GAAA,GAAA,GAAA,WACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,QACA,IAAA,YAAA,GAAA,GAAA,WACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,QACA,IAAA,oBAAA,GAAA,GAAA,mBACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,OACA,CAAA,KAAA,GAAA,GAAA,GAAA,qBAIA,MAAA,IAAA,MAAA,mBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,KAMA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EACA,EAAA,IACA,EAAA,EACA,GAAA,GAEA,IAAA,EAAA,KAAA,MAAA,KAAA,IAAA,GAAA,KAAA,KACA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EACA,EAAA,KAAA,MAAA,EAAA,KAAA,IAAA,EAAA,KACA,EAAA,KAAA,IAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,QACA,EAAA,EAAA,EACA,KAAA,cAAA,OAAA,KACA,KAAA,WAAA,GACA,KAAA,WAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IACA,EADA,OAAA,KAAA,GACA,OACA,GAAA,GAAA,GACA,KAAA,WAAA,IAAA,QACA,GAAA,GAAA,MACA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,OACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,MAAA,kBAHA,KAAA,cAAA,OAAA,KACA,KAAA,YAAA,GAIA,IAAA,IAAA,KAAA,EACA,EAAA,eAAA,KACA,KAAA,KAAA,GACA,KAAA,KAAA,EAAA,MAKA,EAAA,UAAA,WAAA,SAAA,GACA,KAAA,cAAA,OAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,KAAA,cAAA,OAAA,GAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,WAAA,EACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,KAAA,IAAA,EAAA,IACA,EAAA,EAAA,KAAA,IAAA,EAAA,IACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,GACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,UAAA,SAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,KAAA,cAAA,QAAA,MAAA,IAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,KAAA,cAAA,OAAA,IAAA,GAAA,KACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,IAAA,EAAA,KAAA,MAAA,EAAA,KAAA,IAAA,EAAA,KACA,EAAA,EAAA,KAAA,IAAA,EAAA,IACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA,GACA,KAAA,cAAA,QAAA,WAAA,KAAA,IACA,KAAA,cAAA,QAAA,SAAA,KAAA,IACA,KAAA,cAAA,QAAA,MAAA,KAAA,GACA,KAAA,cAAA,OAAA,IAAA;;AC1ea,aAAA,QAAA,YAAA,EANA,QAAA,sBACX,OAAO,uBAAyB,OAAO,yBAC5B,QAAA,kBACX,OAAO,mBACP,OAAO,sBACP,OAAO,wBACI,QAAA,gBACX,OAAO,iBAAmB,OAAO;;;ACHtB,IAAA,EAAA,UAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,QAAA,YAAA,EANb,IAAI,EAAgB,CAAE,WAAY,CAAC,CAAE,KAAM,kCACvC,EAAY,EAEhB,EAAA,EAAA,QAAA,kBACA,EAAA,QAAA,aAEa,QAAA,KAAO,CAClB,KAAM,aAEN,WAAY,eACZ,WAAY,IAGZ,gBAAiB,CAAE,OAAQ,GAC3B,WAAY,MAGZ,SAAU,EACV,YAAa,SAAS,GAChB,IAAA,EAAa,SAAS,EAAO,IAC5B,MAAM,SAAS,EAAO,KAIzB,QAAA,KAAK,SAAW,EAAQ,EAAI,EAH5B,QAAA,KAAK,SAAW,EAKlB,QAAA,KAAK,IAAM,QAAA,KAAK,KAAO,QAAA,KAAK,MAAQ,QAAA,KAAK,KACrC,QAAA,KAAK,SAAW,IAClB,QAAA,KAAK,MAAQ,QAAA,KAAK,WAAW,UAE3B,QAAA,KAAK,SAAW,IAClB,QAAA,KAAK,KAAO,QAAA,KAAK,WAAW,YAE1B,QAAA,KAAK,SAAW,IAClB,QAAA,KAAK,IAAM,QAAA,KAAK,SAGpB,eAAgB,SAAS,GACnB,EAAG,cAAgB,SACrB,QAAA,KAAK,KACH,iFAGF,QAAA,KAAK,OAAS,GAIlB,WAAY,SAAS,GACZ,OAAA,WACD,IAAA,EAAO,MAAM,UAAU,MAAM,KAAK,WACtC,EAAK,QAAQ,GACb,QAAA,KAAK,OAAO,MAAM,QAAA,KAAM,KAG5B,OAAQ,WACF,IAAA,GAAM,EACN,EAAO,MAAM,UAAU,MAAM,KAAK,WACtC,EAAK,QAAQ,YACR,IAAA,IAAI,EAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAClC,EAAK,aAAc,QACrB,EAAK,GAAK,IAAM,EAAK,GAAG,KAAO,KAAO,EAAK,GAAG,QAC9C,GAAM,GAGV,EAAM,QAAQ,MAAM,MAAM,QAAS,GAAQ,QAAQ,IAAI,MAAM,QAAS,IAKxE,cAAe,EAIf,QACM,OAAO,qBACF,UACE,OAAO,wBACT,SACE,OAAO,kBACT,YAEA,cAMX,SAAW,WACL,QAA6B,IAAtB,EAAA,kBACF,MAAA,GAGL,IAOA,EAAI,EAPJ,GAAO,EACP,GAAa,EAEb,GAAa,EACb,GAAO,EACP,IAAwB,OAAO,wBAG/B,IACF,EAAK,IAAI,EAAA,kBAAkB,EAAe,CACxC,SAAU,CAAC,CAAE,iBAAiB,MAEhC,MAAO,GACP,GAAO,EACP,GAAa,EAGX,GAAA,EACE,IACF,EAAK,EAAG,kBAAkB,eAC1B,MAAO,GACP,GAAO,EAIP,GAAA,EAAM,CAEJ,IACF,EAAG,WAAa,OAChB,GAAa,EACb,MAAO,IAKL,IAAA,EAAa,IAAI,EAAA,kBAAkB,EAAe,IAClD,IAKF,EAJiB,EAAW,kBAC1B,sBACA,IAEgB,SAClB,MAAO,IACT,EAAW,QAiCN,OA7BH,IACF,IAAe,EAAG,WAwBhB,GACF,EAAG,QAGE,CACL,WAAY,EACZ,KAAM,EACN,WAAY,EACZ,OAAQ,EACR,SAAU,EACV,KAAM,EACN,oBAAqB,GAxFd,GA8FX,WAAY,SAAS,GAEZ,OAAC,GAAM,uCAAuC,KAAK,IAG5D,YAAa,SAAS,GAEb,OAAC,GAAO,uCAAuC,KAAK,IAG7D,OAAO,EAEP,SAAU,SAAS,EAAM,GACvB,EAAK,OAAS,EACd,EAAK,UAAY,OAAO,OAAO,EAAU,UAAW,CAClD,YAAa,CACX,MAAO,EACP,YAAY,EACZ,UAAU,EACV,cAAc,MAIpB,OAAQ,SAAS,EAAM,GAChB,IAAA,IAAI,KAAO,EACV,EAAO,eAAe,KACxB,EAAK,GAAO,EAAO,IAGhB,OAAA,GAET,KAAM,EAAA,QAAW,KACjB,OAAQ,EAAA,QAAW,OAEnB,IAAK,WACC,GAAA,QAAA,KAAK,MAAO,CACV,IAAA,GAAM,EACN,EAAO,MAAM,UAAU,MAAM,KAAK,WACtC,EAAK,QAAQ,YACR,IAAA,IAAI,EAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAClC,EAAK,aAAc,QACrB,EAAK,GAAK,IAAM,EAAK,GAAG,KAAO,KAAO,EAAK,GAAG,QAC9C,GAAM,GAGV,EACI,QAAQ,MAAM,MAAM,QAAS,GAC7B,QAAQ,IAAI,MAAM,QAAS,KAInC,eAAiB,SAAS,GACpB,IAAA,EAAW,GACX,EAAc,uBAUT,SAAA,EAAc,GACjB,EAAM,QAAU,GAAU,EAAM,MAAQ,IACtC,EAAM,iBACR,EAAM,kBAEJ,EAAS,QACX,EAAS,OAAT,IASC,OALH,EAAO,iBACT,EAAO,iBAAiB,UAAW,GAAe,GACzC,EAAO,aAChB,EAAO,YAAY,YAAa,GAlBzB,SAA0B,GACjC,EAAS,KAAK,GACd,EAAO,YAAY,EAAa,MATnB,CA4Bd,QAKH,MAAO,SAAS,GAMP,IALH,IAEA,EAFA,EAAS,GACT,EAAO,EAAG,KAEV,EAAS,EAAQ,EACjB,EAAQ,KAAK,KAAK,EAAO,QAAA,KAAK,YAC3B,EAAQ,GAAM,CACf,IAAA,EAAM,KAAK,IAAI,EAAM,EAAQ,QAAA,KAAK,YAClC,EAAI,EAAG,MAAM,EAAO,GAEpB,EAAQ,CACV,WAAY,EACZ,EAAG,EACH,KAAM,EACN,MAAO,GAGT,EAAO,KAAK,GAEZ,EAAQ,EACR,GAAS,EAGJ,OADP,GAAa,EACN,GAGT,kBAAmB,SAAS,EAAM,GAC5B,IAAA,EAAK,IAAI,WACb,EAAG,OAAS,SAAS,GACnB,EAAG,EAAI,OAAO,SAEhB,EAAG,kBAAkB,IAEvB,mBAAoB,SAAS,EAAM,GAC7B,IAAA,EAAK,IAAI,WACb,EAAG,OAAS,SAAS,GACnB,EAAG,EAAI,OAAO,SAEhB,EAAG,mBAAmB,IAExB,0BAA2B,SAAS,GAE7B,IADD,IAAA,EAAY,IAAI,WAAW,EAAO,QAC7B,EAAI,EAAG,EAAI,EAAO,OAAQ,IACjC,EAAU,GAA4B,IAAvB,EAAO,WAAW,GAE5B,OAAA,EAAU,QAEnB,YAAa,WACJ,OAAA,KAAK,SACT,SAAS,IACT,OAAO,IAIZ,SAAU,WACD,MAAsB,WAAtB,SAAS;;AChUpB,aAUA,SAAA,EAAA,EAAA,EAAA,GACA,KAAA,GAAA,EACA,KAAA,QAAA,EACA,KAAA,KAAA,IAAA,EAUA,SAAA,KAQA,EAAA,UAAA,aAAA,EASA,EAAA,UAAA,UAAA,SAAA,GACA,IAAA,KAAA,UAAA,KAAA,QAAA,GAAA,MAAA,GACA,GAAA,KAAA,QAAA,GAAA,GAAA,MAAA,CAAA,KAAA,QAAA,GAAA,IAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,QAAA,GAAA,OAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IACA,EAAA,GAAA,KAAA,QAAA,GAAA,GAAA,GAGA,OAAA,GAUA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,KAAA,UAAA,KAAA,QAAA,GAAA,OAAA,EAEA,IAEA,EACA,EAHA,EAAA,KAAA,QAAA,GACA,EAAA,UAAA,OAIA,GAAA,mBAAA,EAAA,GAAA,CAGA,OAFA,EAAA,MAAA,KAAA,eAAA,EAAA,EAAA,IAAA,GAEA,GACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,UAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAGA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,UAAA,GAGA,EAAA,GAAA,MAAA,EAAA,QAAA,OACA,CACA,IACA,EADA,EAAA,EAAA,OAGA,IAAA,EAAA,EAAA,EAAA,EAAA,IAGA,OAFA,EAAA,GAAA,MAAA,KAAA,eAAA,EAAA,EAAA,GAAA,IAAA,GAEA,GACA,KAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,SAAA,MACA,KAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,QAAA,GAAA,MACA,KAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,QAAA,EAAA,GAAA,MACA,QACA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,UAAA,GAGA,EAAA,GAAA,GAAA,MAAA,EAAA,GAAA,QAAA,IAKA,OAAA,GAWA,EAAA,UAAA,GAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,MAWA,OATA,KAAA,UAAA,KAAA,QAAA,IACA,KAAA,QAAA,GAEA,KAAA,QAAA,GAAA,GACA,KAAA,QAAA,GAAA,CACA,KAAA,QAAA,GAAA,GAFA,KAAA,QAAA,GAAA,KAAA,GAFA,KAAA,QAAA,GAAA,EAQA,MAWA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,MAAA,GAWA,OATA,KAAA,UAAA,KAAA,QAAA,IACA,KAAA,QAAA,GAEA,KAAA,QAAA,GAAA,GACA,KAAA,QAAA,GAAA,CACA,KAAA,QAAA,GAAA,GAFA,KAAA,QAAA,GAAA,KAAA,GAFA,KAAA,QAAA,GAAA,EAQA,MAWA,EAAA,UAAA,eAAA,SAAA,EAAA,EAAA,GACA,IAAA,KAAA,UAAA,KAAA,QAAA,GAAA,OAAA,KAEA,IAAA,EAAA,KAAA,QAAA,GACA,EAAA,GAEA,GAAA,IACA,EAAA,KAAA,EAAA,KAAA,GAAA,IAAA,EAAA,OACA,EAAA,KAAA,IAEA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KACA,EAAA,GAAA,KAAA,GAAA,IAAA,EAAA,GAAA,OACA,EAAA,KAAA,EAAA,IAcA,OANA,EAAA,OACA,KAAA,QAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,SAEA,KAAA,QAAA,GAGA,MASA,EAAA,UAAA,mBAAA,SAAA,GACA,OAAA,KAAA,SAEA,SAAA,KAAA,QAAA,GACA,KAAA,QAAA,GAEA,MALA,MAWA,EAAA,UAAA,IAAA,EAAA,UAAA,eACA,EAAA,UAAA,YAAA,EAAA,UAAA,GAKA,EAAA,UAAA,gBAAA,WACA,OAAA,MAMA,EAAA,aAAA,EACA,EAAA,cAAA,EACA,EAAA,cAAA,EAKA,OAAA,QAAA;;ACdA,aAAA,QAAA,YAAA,EAtNA,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,iBAMA,SAAgB,EAAO,EAAQ,EAAM,EAAM,EAAM,EAAK,GAChD,KAAE,gBAAgB,GACpB,OAAO,IAAI,EAAO,EAAQ,EAAM,EAAM,EAAM,EAAK,GAEnD,EAAS,GAAU,EAEnB,EAAA,aAAa,KAAK,MAGb,KAAA,cAAe,EACf,KAAA,OAAS,GAEV,IAAA,EAAe,EAAS,WAAa,UACrC,EAAa,EAAS,SAAW,QAChC,KAAA,SAAW,EAAe,EAAO,IAAM,EAAO,EAAO,EACrD,KAAA,OAAS,EAAa,EAAO,IAAM,EAAS,EAAO,cAAgB,EAf1E,QAAA,OAAA,EAkBA,EAAA,KAAK,SAAS,EAAQ,EAAA,cAGtB,EAAO,UAAU,MAAQ,SAAS,EAAI,GAC/B,KAAA,GAAK,EAEL,KAAA,UAAY,IAAM,EAAK,IAAM,EAC7B,KAAA,QAAU,OAAS,EAAK,UAAY,EAEpC,KAAA,kBACA,KAAA,mBAIP,EAAO,UAAU,gBAAkB,SAAS,GACtC,IAAA,EAAO,KAEP,KAAK,UAIJ,KAAA,QAAU,IAAI,UAAU,KAAK,QAE7B,KAAA,QAAQ,UAAY,SAAS,GAC5B,IACE,IAAA,EAAO,KAAK,MAAM,EAAM,MAC5B,MAAO,GAEP,YADA,EAAA,KAAK,IAAI,yBAA0B,EAAM,MAG3C,EAAK,KAAK,UAAW,IAGlB,KAAA,QAAQ,QAAU,SAAS,GAC9B,EAAA,KAAK,IAAI,kBACT,EAAK,cAAe,EACpB,EAAK,KAAK,iBAKP,KAAA,QAAQ,OAAS,WAChB,EAAK,WACP,aAAa,EAAK,UAClB,WAAW,WACT,EAAK,MAAM,QACX,EAAK,MAAQ,MACZ,MAEL,EAAK,sBACL,EAAA,KAAK,IAAI,kBAKb,EAAO,UAAU,gBAAkB,SAAS,GACtC,IACE,IAAA,EAAO,KACN,KAAA,MAAQ,IAAI,eACZ,KAAA,MAAM,OAAS,EACf,KAAA,MAAM,aAAe,GAAK,EAC1B,KAAA,MAAM,KACT,OACA,KAAK,SAAW,SAAW,KAAK,MAAM,cACtC,GAEG,KAAA,MAAM,QAAU,WAGnB,aAAa,EAAK,UAClB,EAAK,KAAK,iBAEP,KAAA,MAAM,mBAAqB,WACP,GAAnB,KAAK,YAAmB,KAAK,KAC1B,KAAA,IAAI,eACF,KAAK,KAEZ,KAAK,WAAa,GACF,MAAhB,KAAK,QACL,KAAK,cAEL,EAAK,cAAc,OAGlB,KAAA,MAAM,KAAK,MACX,KAAA,kBACL,MAAO,GACP,EAAA,KAAK,IAAI,4DAKb,EAAO,UAAU,cAAgB,SAAS,GAEpC,IAAA,EAAW,EAAK,aAAa,MAAM,MAGnC,GAAA,EAAK,QACA,KAAA,EAAK,QAAQ,OAAS,GAAG,CAC1B,IAAA,EAAQ,EAAK,QAAQ,QACrB,EAAkB,EAAS,GAC3B,IACF,EAAkB,KAAK,MAAM,GAC7B,MAAO,GACP,EAAK,QAAQ,MAAM,GACnB,MAEG,KAAA,KAAK,UAAW,GAIrB,IAAA,EAAU,EAAS,EAAK,QACxB,GAAA,EAKE,GAJJ,EAAK,QAAU,EAIX,EAAK,SAAW,EAAS,OACtB,EAAK,UACR,EAAK,QAAU,IAEjB,EAAK,QAAQ,KAAK,EAAK,OAAS,OAC3B,CACD,IACF,EAAU,KAAK,MAAM,GACrB,MAAO,GAEP,YADA,EAAA,KAAK,IAAI,yBAA0B,GAGhC,KAAA,KAAK,UAAW,KAK3B,EAAO,UAAU,gBAAkB,WAC7B,IAAA,EAAO,KACN,KAAA,SAAW,WAAW,WACrB,IAAA,EAAM,EAAK,MACV,EAAK,UAIR,EAAI,SAHJ,EAAK,gBAAgB,EAAI,aAAe,GACxC,EAAK,MAAM,IAAM,IAIlB,OAIL,EAAO,UAAU,QAAU,WAClB,OAAA,KAAK,SAAsC,GAA3B,KAAK,QAAQ,YAItC,EAAO,UAAU,oBAAsB,WAChC,IAAA,IAAI,EAAI,EAAG,EAAK,KAAK,OAAO,OAAQ,EAAI,EAAI,GAAK,EAC/C,KAAA,KAAK,KAAK,OAAO,KAK1B,EAAO,UAAU,KAAO,SAAS,GAC3B,IAAA,KAAK,aAML,GAAC,KAAK,GAKN,GAAC,EAAK,KAAN,CAKA,IAAA,EAAU,KAAK,UAAU,GACzB,GAAA,KAAK,UACF,KAAA,QAAQ,KAAK,OACb,CACD,IAAA,EAAO,IAAI,eACX,EAAM,KAAK,SAAW,IAAM,EAAK,KAAK,cAC1C,EAAK,KAAK,OAAQ,GAAK,GACvB,EAAK,iBAAiB,eAAgB,oBACtC,EAAK,KAAK,SAZL,KAAA,KAAK,QAAS,wBALd,KAAA,OAAO,KAAK,IAqBrB,EAAO,UAAU,MAAQ,YAClB,KAAK,cAAgB,KAAK,YACxB,KAAA,QAAQ,QACR,KAAA,cAAe;;ACsIvB,aAAA,QAAA,YAAA,EA/VD,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,aAsVA,SAAS,EAAsB,EAAqB,GAC9C,aAAc,EAChB,EAAO,YAAY,QAAQ,SAAA,GACzB,EAAW,SAAS,EAAO,KAEpB,cAAe,GAClB,EAAY,UAAU,GAnVnB,QAAA,WAAa,CACxB,IAAK,CACH,KAAM,GACN,MAAO,IAGT,MAAO,IAGT,QAAA,WAAW,UAAY,MAGvB,QAAA,WAAW,gBAAkB,SAAS,EAAY,GAC5C,IAAA,EAAK,QAAA,WAAW,mBAAmB,EAAY,GAU/C,GAPJ,EAAW,GAAK,EAAW,eAAiB,EAEpB,UAApB,EAAW,MAAoB,EAAQ,SACzC,EAAsB,EAAQ,QAAS,GAIrC,EAAQ,WAAY,CAClB,GAAoB,SAApB,EAAW,KAAiB,CAE1B,IAAA,EAAS,GAQR,EAAA,KAAK,SAAS,OACjB,EAAS,CAAE,SAAU,EAAQ,WAE3B,IAAA,EAAK,EAAG,kBAAkB,EAAW,MAAO,GAChD,EAAW,WAAW,GAGxB,QAAA,WAAW,WAAW,QAEtB,QAAA,WAAW,UAAU,QAAS,EAAY,EAAQ,MAItD,QAAA,WAAW,mBAAqB,SAAS,EAAY,GAC9C,QAAA,WAAW,IAAI,EAAW,OAC7B,EAAA,KAAK,MACH,EAAW,KACT,sFAID,QAAA,WAAW,IAAI,EAAW,MAAM,EAAW,QAC9C,QAAA,WAAW,IAAI,EAAW,MAAM,EAAW,MAAQ,IAEjD,IAEA,EAFkB,QAAA,WAAW,IAAI,EAAW,MAAM,EAAW,MAqB1D,OARH,EAAQ,KAEV,EAAK,QAAA,WAAW,IAAI,EAAW,MAAM,EAAW,MAAM,EAAQ,KAG3D,GAA4B,WAAtB,EAAG,iBACZ,EAAK,QAAA,WAAW,qBAAqB,IAEhC,GAgBT,QAAA,WAAW,qBAAuB,SAAS,GACzC,EAAA,KAAK,IAAI,+BAEL,IAAA,EAAK,QAAA,WAAW,UAAY,EAAA,KAAK,cACjC,EAAW,GAES,SAApB,EAAW,MAAoB,EAAA,KAAK,SAAS,KAElB,UAApB,EAAW,OAEpB,EAAW,CAAE,SAAU,CAAC,CAAE,sBAAsB,MAHhD,EAAW,CAAE,SAAU,CAAC,CAAE,iBAAiB,KAMzC,IAAA,EAAK,IAAI,EAAA,kBAAkB,EAAW,SAAS,QAAQ,OAAQ,GAK5D,OAJP,QAAA,WAAW,IAAI,EAAW,MAAM,EAAW,MAAM,GAAM,EAEvD,QAAA,WAAW,gBAAgB,EAAY,EAAI,GAEpC,GAIT,QAAA,WAAW,gBAAkB,SAAS,EAAY,EAAI,GAChD,IAAA,EAAS,EAAW,KACpB,EAAe,EAAW,GAC1B,EAAW,EAAW,SAG1B,EAAA,KAAK,IAAI,iCACT,EAAG,eAAiB,SAAS,GACvB,EAAI,YACN,EAAA,KAAK,IAAI,+BAAgC,EAAW,MACpD,EAAS,OAAO,KAAK,CACnB,KAAM,YACN,QAAS,CACP,UAAW,EAAI,UACf,KAAM,EAAW,KACjB,aAAc,EAAW,IAE3B,IAAK,MAKX,EAAG,2BAA6B,WACtB,OAAA,EAAG,oBACJ,IAAA,SACH,EAAA,KAAK,IACH,8DAAgE,GAElE,EAAW,KACT,QACA,IAAI,MAAM,gCAAkC,EAAS,aAEvD,EAAW,QACX,MACG,IAAA,eACH,EAAA,KAAK,IACH,8DAAgE,GAElE,MACG,IAAA,YACH,EAAG,eAAiB,EAAA,KAAK,OAM/B,EAAG,YAAc,EAAG,2BAGpB,EAAA,KAAK,IAAI,8BAGT,EAAG,cAAgB,SAAS,GAC1B,EAAA,KAAK,IAAI,yBACL,IAAA,EAAK,EAAI,QACI,EAAS,cAAc,EAAQ,GACrC,WAAW,IAIxB,EAAA,KAAK,IAAI,+BACT,EAAG,QAAU,SAAS,GACpB,EAAA,KAAK,IAAI,0BACL,IAAA,EAAS,EAAI,QAAQ,GACrB,EAAa,EAAS,cAAc,EAAQ,GACxB,UAApB,EAAW,MACb,EAAsB,EAAQ,KAKpC,QAAA,WAAW,QAAU,SAAS,GAC5B,EAAA,KAAK,IAAI,iCAAmC,EAAW,MAEnD,IAAA,EAAK,EAAW,GAGhB,IACA,EAAG,YAAgC,WAAlB,EAAG,YACE,WAAtB,EAAG,kBAEL,EAAG,QACH,EAAW,GAAK,OAIpB,QAAA,WAAW,WAAa,SAAS,GAC3B,IAAA,EAAwB,EAAW,GACjC,EAAW,SAAS,GACxB,EAAA,KAAK,IAAI,mBAGN,EAAA,KAAK,SAAS,MACK,SAApB,EAAW,MACX,EAAW,WAEX,EAAM,IAAM,SAAS,mBAAmB,EAAM,MA6BhD,EAAG,oBAAoB,GACtB,KAAK,WAAM,OA3BV,EAAA,KAAK,IAAI,8BAA+B,OAAQ,EAAW,WAC3D,EAAW,SAAS,OAAO,KAAK,CAC9B,KAAM,QACN,QAAS,CACP,IAAK,EACL,KAAM,EAAW,KACjB,MAAO,EAAW,MAClB,aAAc,EAAW,GACzB,SAAU,EAAW,SACrB,cAAe,EAAW,cAC1B,SAAU,EAAW,SACrB,QAAS,EAAA,KAAK,SAEhB,IAAK,EAAW,SAapB,MAEO,SAAA,GAAO,OAZI,SAAS,GAIvB,0FADA,IAGA,EAAW,SAAS,UAAU,SAAU,GACxC,EAAA,KAAK,IAAI,kCAAmC,IAKlC,CAAU,MAM1B,EAAG,YAAY,EAAW,QAAQ,aAC/B,KAAK,SAAA,GAAS,OAAA,EAAS,KAD1B,MAES,SAAA,GAAO,OANK,SAAS,GAC5B,EAAW,SAAS,UAAU,SAAU,GACxC,EAAA,KAAK,IAAI,0BAA2B,GAItB,CAAa,MAG/B,QAAA,WAAW,YAAc,SAAS,GAC5B,IAAA,EAAwB,EAAW,GACjC,EAAW,SAAS,GACxB,EAAA,KAAK,IAAI,oBAGN,EAAA,KAAK,SAAS,MACK,SAApB,EAAW,MACX,EAAW,WAEX,EAAO,IAAM,SAAS,mBAAmB,EAAO,MAgBlD,EAAG,oBAAoB,GACtB,KAAK,WAAM,OAbV,EAAA,KAAK,IAAI,+BAAgC,OAAQ,EAAW,WAC5D,EAAW,SAAS,OAAO,KAAK,CAC9B,KAAM,SACN,QAAS,CACP,IAAK,EACL,KAAM,EAAW,KACjB,aAAc,EAAW,GACzB,QAAS,EAAA,KAAK,SAEhB,IAAK,EAAW,SAGpB,MAEO,SAAA,GACH,EAAW,SAAS,UAAU,SAAU,GACxC,EAAA,KAAK,IAAI,kCAAmC,MAGlD,EAAG,eACF,KAAK,SAAA,GAAU,OAAA,EAAS,KADzB,MAEO,SAAA,GACL,EAAW,SAAS,UAAU,SAAU,GACxC,EAAA,KAAK,IAAI,4BAA6B,MAK1C,QAAA,WAAW,UAAY,SAAS,EAAM,EAAY,GAChD,EAAM,IAAI,EAAA,sBAAsB,GAC1B,IAAA,EAAwB,EAAW,GAEzC,EAAA,KAAK,IAAI,6BAA8B,GAUvC,EAAG,qBAAqB,GACvB,KAAK,WAAM,OARV,EAAA,KAAK,IAAI,yBAA0B,EAAM,OAAQ,EAAW,WAE/C,UAAT,GACF,QAAA,WAAW,YAAY,MAI3B,MAEO,SAAA,GACH,EAAW,SAAS,UAAU,SAAU,GACxC,EAAA,KAAK,IAAI,mCAAoC,MAMnD,QAAA,WAAW,gBAAkB,SAAS,EAAY,GAC5C,IAAA,EAAY,EAAI,UAChB,EAAgB,EAAI,cACxB,EAAW,GAAG,gBACZ,IAAI,EAAA,gBAAgB,CAClB,cAAe,EACf,UAAW,KAGf,EAAA,KAAK,IAAI,2BAA4B,EAAW;;AC1PlD,aAAA,QAAA,YAAA,EA1FA,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,iBACA,EAAA,QAAA,gBAKA,SAAgB,EAAgB,EAAM,EAAU,GAC1C,KAAE,gBAAgB,GACpB,OAAO,IAAI,EAAgB,EAAM,EAAU,GAC7C,EAAA,aAAa,KAAK,MAEb,KAAA,QAAU,EAAA,KAAK,OAAO,GAAI,GAE1B,KAAA,MAAO,EACP,KAAA,KAAO,QACP,KAAA,KAAO,EACP,KAAA,SAAW,EACX,KAAA,SAAW,KAAK,QAAQ,SACxB,KAAA,YAAc,KAAK,QAAQ,QAE3B,KAAA,GACH,KAAK,QAAQ,cAAgB,EAAgB,UAAY,EAAA,KAAK,cAC5D,KAAK,aACP,EAAA,WAAW,gBAAgB,KAAM,CAC/B,QAAS,KAAK,YACd,YAAY,IAnBlB,QAAA,gBAAA,EAwBA,EAAA,KAAK,SAAS,EAAiB,EAAA,cAE/B,EAAgB,UAAY,MAE5B,EAAgB,UAAU,UAAY,SAAS,GAC7C,EAAA,KAAK,IAAI,mBAAoB,GAExB,KAAA,aAAe,EACf,KAAA,KAAK,SAAU,IAGtB,EAAgB,UAAU,cAAgB,SAAS,GAC7C,IAAA,EAAU,EAAQ,QAEd,OAAA,EAAQ,MACT,IAAA,SAEH,EAAA,WAAW,UAAU,EAAQ,KAAM,KAAM,EAAQ,KAC5C,KAAA,MAAO,EACZ,MACG,IAAA,YACH,EAAA,WAAW,gBAAgB,KAAM,EAAQ,WACzC,MACF,QACE,EAAA,KAAK,KACH,6BACA,EAAQ,KACR,aACA,KAAK,QAMb,EAAgB,UAAU,OAAS,SAAS,GACtC,GAAA,KAAK,YACP,EAAA,KAAK,KACH,4FAFA,CAOC,KAAA,QAAQ,SAAS,QAAU,EAE3B,KAAA,YAAc,EACnB,EAAA,WAAW,gBAAgB,KAAM,KAAK,QAAQ,UAGzC,IADD,IAAA,EAAW,KAAK,SAAS,aAAa,KAAK,IACtC,EAAI,EAAG,EAAK,EAAS,OAAQ,EAAI,EAAI,GAAK,EAC5C,KAAA,cAAc,EAAS,IAEzB,KAAA,MAAO,IAQd,EAAgB,UAAU,MAAQ,WAC3B,KAAK,OAGL,KAAA,MAAO,EACZ,EAAA,WAAW,QAAQ,MACd,KAAA,KAAK;;;ACDZ,IAAA,EAAA,UAAA,GA/FA,EAAA,QAAA,iBAEA,EAAA,CACA,OAAA,EAEA,SAAA,SAAA,EAAA,GACA,EAAA,OAAA,EACA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CACA,YAAA,CACA,MAAA,EACA,YAAA,EACA,UAAA,EACA,cAAA,MAIA,OAAA,SAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,eAAA,KACA,EAAA,GAAA,EAAA,IAGA,OAAA,GAEA,KAAA,EAAA,KACA,OAAA,EAAA,OAEA,IAAA,WACA,GAAA,EAAA,MAAA,CAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,UAAA,OAAA,IACA,EAAA,GAAA,UAAA,GAEA,EAAA,QAAA,cACA,QAAA,IAAA,MAAA,QAAA,KAIA,eAAA,SAAA,GACA,IAAA,EAAA,GACA,EAAA,uBAUA,SAAA,EAAA,GACA,EAAA,QAAA,GAAA,EAAA,MAAA,IACA,EAAA,iBACA,EAAA,kBAEA,EAAA,QACA,EAAA,OAAA,IASA,OALA,EAAA,iBACA,EAAA,iBAAA,UAAA,GAAA,GACA,EAAA,aACA,EAAA,YAAA,YAAA,GAlBA,SAAA,GACA,EAAA,KAAA,GACA,EAAA,YAAA,EAAA,MATA,CA4BA,MAEA,kBAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,WACA,EAAA,OAAA,SAAA,GACA,EAAA,EAAA,OAAA,SAEA,EAAA,kBAAA,IAEA,mBAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,WACA,EAAA,OAAA,SAAA,GACA,EAAA,EAAA,OAAA,SAEA,EAAA,mBAAA,IAEA,0BAAA,SAAA,GAEA,IADA,IAAA,EAAA,IAAA,WAAA,EAAA,QACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,GAAA,IAAA,EAAA,WAAA,GAEA,OAAA,EAAA,QAEA,YAAA,WACA,OAAA,KAAA,SAAA,SAAA,IAAA,OAAA,KAIA,OAAA,QAAA;;AC9FA,IAAA,EAAA,QAAA,UAMA,SAAA,EAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GACA,KAAA,IAAA,EAEA,EAAA,MAAA,EAIA,KAAA,UAAA,GAEA,KAAA,UAAA,GACA,KAAA,UAAA,GAGA,KAAA,QAAA,IAEA,KAAA,KAAA,IAEA,KAAA,UAAA,EAGA,KAAA,OAAA,EAGA,KAAA,OAAA,GAEA,KAAA,WAIA,EAAA,UAAA,KAAA,SAAA,GAEA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,KAAA,KAAA,KACA,KAAA,YAAA,CAAA,KAAA,KAIA,KAAA,UAAA,KAAA,QAAA,CACA,IAAA,EACA,OAAA,KAAA,OAAA,IAGA,EAAA,QACA,KAAA,UAAA,KAAA,QAAA,MAAA,IAAA,MAIA,KAAA,oBAAA,KAAA,QACA,KAAA,QAAA,IAIA,EAAA,UAAA,eAAA,WAGA,IAAA,EAAA,KACA,KAAA,SAAA,YAAA,WAEA,IAAA,EAAA,EAAA,OAAA,QACA,GAAA,EAAA,UACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,cAAA,EAAA,SAGA,EAAA,cAAA,IAEA,KAAA,YAGA,EAAA,UAAA,cAAA,SAAA,GACA,IAAA,EAAA,KACA,EAAA,EAAA,KAAA,GACA,EAAA,mBAAA,EAAA,SAAA,GACA,EAAA,IAAA,KAAA,KAEA,IAAA,EAAA,OAAA,SACA,aAAA,EAAA,UACA,EAAA,SAAA,OAMA,EAAA,UAAA,aAAA,WACA,IAAA,IAAA,KAAA,KAAA,UACA,KAAA,UAAA,eAAA,IACA,KAAA,oBAAA,IAOA,EAAA,UAAA,YAAA,SAAA,GAEA,IADA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,KAAA,OAAA,OAAA,EAAA,EAAA,GAAA,EAAA,CACA,IAAA,EAAA,KAAA,OAAA,GACA,IAAA,EACA,GAAA,EACA,EAAA,YAAA,IAAA,EAAA,QAAA,KACA,GAAA,GAGA,IACA,KAAA,OAAA,KAAA,GACA,KAAA,UACA,KAAA,mBAMA,EAAA,UAAA,SAAA,WAEA,IAAA,EAAA,KACA,KAAA,IAAA,UAAA,SAAA,GACA,IAAA,EAAA,EAAA,KAIA,GAHA,EAAA,cAGA,OAAA,CACA,IAAA,EAAA,EAAA,0BAAA,GACA,EAAA,EAAA,OAAA,GACA,EAAA,eAAA,MAMA,EAAA,UAAA,eAAA,SAAA,GACA,IAGA,EAHA,EAAA,EAAA,GACA,EAAA,KAAA,UAAA,GACA,EAAA,KAAA,UAAA,GAEA,OAAA,EAAA,IAEA,IAAA,KACA,IAAA,EAAA,EACA,GACA,KAAA,UAAA,EAAA,OAAA,IAEA,MAEA,IAAA,MAMA,GALA,EAAA,EAGA,KAAA,UAAA,GAAA,EAAA,IAEA,EACA,MAGA,KAAA,KAAA,GACA,MACA,IAAA,MAEA,GADA,EAAA,EACA,CACA,IAAA,EAAA,EAAA,GAEA,EAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAGA,EAAA,KAAA,EAAA,OAAA,QACA,EAAA,IAAA,SAAA,IAAA,KAAA,EAAA,cACA,KAAA,UAAA,IAEA,KAAA,eAIA,MAEA,IAAA,QAGA,KADA,EAAA,GACA,CAEA,IAAA,IADA,KAAA,UAAA,GAEA,MAEA,EAAA,CACA,IAAA,CAAA,MAAA,EAAA,GACA,OAAA,IAEA,KAAA,UAAA,GAAA,EAGA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,OAAA,GAAA,IAAA,WAAA,GAIA,IAAA,EAAA,IAAA,IACA,KAAA,kBAAA,GAEA,KAAA,KAAA,GACA,MACA,QAGA,KAAA,YAAA,KAMA,EAAA,UAAA,OAAA,SAAA,GAIA,IAHA,IAAA,EAAA,GACA,EAAA,EAAA,KACA,EAAA,EACA,EAAA,GAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,MAEA,EAAA,CACA,QAFA,EAAA,MAAA,EAAA,IAIA,EAAA,KAAA,GACA,EAAA,EAGA,OADA,EAAA,IAAA,UAAA,EAAA,OAAA,WACA,GAIA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,KAAA,UAAA,GAAA,IAGA,KAAA,UAAA,KAAA,EAAA,KACA,KAAA,UAAA,GACA,KAAA,UAAA,IAAA,GAGA,KAAA,YAAA,IAIA,EAAA,UAAA,kBAAA,SAAA,GAGA,IAFA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,OACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAEA,QAAA,IAAA,EAAA,GAEA,YADA,EAAA,IAAA,GAAA,GAIA,EAAA,IAAA,GAAA,EAAA,QAIA,EAAA,UAAA,oBAAA,SAAA,GACA,EAAA,IAAA,2BAAA,GAKA,IAJA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,OACA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,IAAA,KAAA,QAAA,EAAA,QACA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,MAAA,IAAA,EAAA,MACA,EAAA,GAAA,MAAA,EACA,EAAA,KAAA,CAAA,QAAA,EAAA,EAAA,EAAA,GAAA,WAGA,EAAA,IAAA,KAAA,SAAA,EAAA,QACA,EAAA,KAAA,CAAA,MAAA,EAAA,EAAA,SAEA,EAAA,WAAA,EACA,KAAA,YAAA,IAIA,EAAA,UAAA,UAAA,SAAA,GACA,EAAA,IAAA,uBAAA,GACA,IAAA,EAAA,KACA,EAAA,KAAA,UAAA,GAAA,OACA,EAAA,IAAA,KAAA,GACA,EAAA,kBAAA,EAAA,SAAA,GACA,EAAA,UAAA,EAAA,OAAA,aAEA,KAAA,UAAA,IAIA,EAAA,mBAAA,SAAA,GAOA,IAAA,EAAA,UAAA,WAAA,MAAA,kBACA,GAAA,IACA,EAAA,SAAA,EAAA,GAAA,MAAA,KAAA,UACA,GAAA,CACA,IAAA,EAAA,EAAA,MAAA,WAEA,GAAA,EAAA,OAAA,EACA,OAAA,EAAA,GAFA,cAEA,EAAA,GAKA,OAAA,GAIA,EAAA,UAAA,UAAA,SAAA,KAEA,OAAA,QAAA;;ACnDA,aAAA,QAAA,YAAA,EA1QA,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,iBACA,EAAA,QAAA,gBACA,EAAA,QAAA,YAKA,SAAgB,EAAe,EAAM,EAAU,GACzC,KAAE,gBAAgB,GACpB,OAAO,IAAI,EAAe,EAAM,EAAU,GAC5C,EAAA,aAAa,KAAK,MAEb,KAAA,QAAU,EAAA,KAAK,OAClB,CACE,cAAe,SACf,UAAU,GAEZ,GAIG,KAAA,MAAO,EACP,KAAA,KAAO,OACP,KAAA,KAAO,EACP,KAAA,SAAW,EAEX,KAAA,GACH,KAAK,QAAQ,cAAgB,EAAe,UAAY,EAAA,KAAK,cAE1D,KAAA,MAAQ,KAAK,QAAQ,OAAS,KAAK,GACnC,KAAA,SAAW,KAAK,QAAQ,SACxB,KAAA,cAAgB,KAAK,QAAQ,cAC7B,KAAA,SAAW,KAAK,QAAQ,SAGxB,KAAA,QAAU,GACV,KAAA,YAAa,EACb,KAAA,WAAa,EAGb,KAAA,aAAe,GAEhB,KAAK,QAAQ,WACV,KAAA,aAAe,KAAK,QAAQ,SAAS,SAG5C,EAAA,WAAW,gBACT,KACA,KAAK,QAAQ,UAAY,CACvB,YAAY,IA1ClB,QAAA,eAAA,EA+CA,EAAA,KAAK,SAAS,EAAgB,EAAA,cAE9B,EAAe,UAAY,MAG3B,EAAe,UAAU,WAAa,SAAS,GACxC,KAAA,IAAM,KAAK,YAAc,EACzB,KAAA,yBAGP,EAAe,UAAU,sBAAwB,WAC3C,IAAA,EAAO,KACP,EAAA,KAAK,SAAS,OACX,KAAA,IAAI,WAAa,eAEnB,KAAA,IAAI,OAAS,WAChB,EAAA,KAAK,IAAI,mCACT,EAAK,MAAO,EACZ,EAAK,KAAK,UAIP,EAAA,KAAK,SAAS,MAAQ,KAAK,WACzB,KAAA,UAAY,IAAI,EAAA,SAAS,KAAK,IAAK,EAAA,KAAK,QAG3C,KAAK,UACF,KAAA,UAAU,UAAY,SAAS,GAClC,EAAK,KAAK,OAAQ,IAGf,KAAA,IAAI,UAAY,SAAS,GAC5B,EAAK,mBAAmB,IAGvB,KAAA,IAAI,QAAU,SAAS,GAC1B,EAAA,KAAK,IAAI,0BAA2B,EAAK,MACzC,EAAK,UAKT,EAAe,UAAU,mBAAqB,SAAS,GACjD,IAAA,EAAO,KACP,EAAO,EAAE,KACT,EAAW,EAAK,YAChB,GAAuB,WAAvB,KAAK,eAAqD,gBAAvB,KAAK,cAAiC,CACvE,GAAA,IAAa,KAMf,YAJA,EAAA,KAAK,kBAAkB,EAAM,SAAS,GACpC,EAAO,EAAA,KAAK,OAAO,GACnB,EAAK,KAAK,OAAQ,KAGf,GAAI,IAAa,YACtB,EAAO,EAAA,KAAK,OAAO,QACd,GAAI,IAAa,OAAQ,CAE1B,IAAA,EAAK,EAAA,KAAK,0BAA0B,GACxC,EAAO,EAAA,KAAK,OAAO,QAEW,SAAvB,KAAK,gBACd,EAAO,KAAK,MAAM,IAKhB,GAAA,EAAK,WAAY,CACf,IAAA,EAAK,EAAK,WACV,EAAY,KAAK,aAAa,IAAO,CACvC,KAAM,GACN,MAAO,EACP,MAAO,EAAK,OAgBd,OAbA,EAAU,KAAK,EAAK,GAAK,EAAK,KAC9B,EAAU,OAAS,EAEf,EAAU,QAAU,EAAU,eAEzB,KAAK,aAAa,GAGzB,EAAO,IAAI,KAAK,EAAU,MACrB,KAAA,mBAAmB,CAAE,KAAM,UAG7B,KAAA,aAAa,GAAM,GAIrB,KAAA,KAAK,OAAQ,IAQpB,EAAe,UAAU,MAAQ,WAC1B,KAAK,OAGL,KAAA,MAAO,EACZ,EAAA,WAAW,QAAQ,MACd,KAAA,KAAK,WAIZ,EAAe,UAAU,KAAO,SAAS,EAAM,GACzC,GAAC,KAAK,KASN,GAAA,KAAK,UAGF,KAAA,UAAU,KAAK,OAHlB,CAMA,IAAA,EAAO,KACP,GAAuB,SAAvB,KAAK,cACF,KAAA,cAAc,KAAK,UAAU,SAC7B,GACkB,WAAvB,KAAK,eACkB,gBAAvB,KAAK,cACL,CACI,IAAA,EAAO,EAAA,KAAK,KAAK,GAOjB,IAFF,EAAA,KAAK,gBAAgB,KAAK,eAC1B,EAAA,KAAK,gBAAgB,EAAA,KAAK,YACN,GAAW,EAAK,KAAO,EAAA,KAAK,WAEhD,YADK,KAAA,YAAY,GAKd,EAAA,KAAK,SAAS,KAIP,EAAA,KAAK,SAAS,WAOnB,KAAA,cAAc,GAJnB,EAAA,KAAK,kBAAkB,EAAM,SAAS,GACpC,EAAK,cAAc,KAPrB,EAAA,KAAK,mBAAmB,EAAM,SAAS,GACrC,EAAK,cAAc,UAYlB,KAAA,cAAc,QAhDd,KAAA,KACH,QACA,IAAI,MACF,6FAiDR,EAAe,UAAU,cAAgB,SAAS,IAC5C,KAAK,YAAe,KAAK,SAAS,KAC/B,KAAA,QAAQ,KAAK,GACb,KAAA,WAAa,KAAK,QAAQ,SAKnC,EAAe,UAAU,SAAW,SAAS,GACvC,IACG,KAAA,IAAI,KAAK,GACd,MAAO,GACF,KAAA,YAAa,EAEd,IAAA,EAAO,KAMJ,OALP,WAAW,WAET,EAAK,YAAa,EAClB,EAAK,cACJ,MACI,EAEF,OAAA,GAIT,EAAe,UAAU,WAAa,WAChC,GAAwB,IAAxB,KAAK,QAAQ,OAAb,CAIA,IAAA,EAAM,KAAK,QAAQ,GAEnB,KAAK,SAAS,KACX,KAAA,QAAQ,QACR,KAAA,WAAa,KAAK,QAAQ,OAC1B,KAAA,gBAIT,EAAe,UAAU,YAAc,SAAS,GAEzC,IADD,IAAA,EAAQ,EAAA,KAAK,MAAM,GACd,EAAI,EAAG,EAAK,EAAM,OAAQ,EAAI,EAAI,GAAK,EAAG,CAC7C,EAAO,EAAM,GACZ,KAAA,KAAK,GAAM,KAIpB,EAAe,UAAU,cAAgB,SAAS,GAC5C,IAAA,EAAU,EAAQ,QAEd,OAAA,EAAQ,MACT,IAAA,SACE,KAAA,aAAe,EAAQ,QAG5B,EAAA,WAAW,UAAU,EAAQ,KAAM,KAAM,EAAQ,KACjD,MACG,IAAA,YACH,EAAA,WAAW,gBAAgB,KAAM,EAAQ,WACzC,MACF,QACE,EAAA,KAAK,KACH,6BACA,EAAQ,KACR,aACA,KAAK;;ACsOb,aAAA,QAAA,YAAA,EAlgBA,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,iBACA,EAAA,QAAA,YACA,EAAA,QAAA,qBACA,EAAA,QAAA,oBAKA,SAAgB,EAAK,EAAI,GACnB,KAAE,gBAAgB,GAAO,OAAO,IAAI,EAAK,EAAI,GACjD,EAAA,aAAa,KAAK,MAGd,GAAM,EAAG,aAAe,QAC1B,EAAU,EACV,OAAK,GACI,IAET,EAAK,EAAG,aAKV,EAAU,EAAA,KAAK,OACb,CACE,MAAO,EACP,KAAM,EAAA,KAAK,WACX,KAAM,EAAA,KAAK,WACX,KAAM,IACN,MAAO,EAAA,KAAK,cACZ,OAAQ,EAAA,KAAK,eAEf,IAEM,IAAM,SACT,KAAA,QAAU,EAEM,MAAjB,EAAQ,OACV,EAAQ,KAAO,OAAO,SAAS,UAGT,MAApB,EAAQ,KAAK,KACf,EAAQ,KAAO,IAAM,EAAQ,MAEe,MAA1C,EAAQ,KAAK,EAAQ,KAAK,OAAS,KACrC,EAAQ,MAAQ,UAIK,IAAnB,EAAQ,QAAwB,EAAQ,OAAS,EAAA,KAAK,WACxD,EAAQ,OAAS,EAAA,KAAK,WACb,EAAQ,MAAQ,EAAA,KAAK,aAC9B,EAAQ,QAAS,GAGf,EAAQ,aACV,EAAA,KAAK,eAAe,EAAQ,aAE9B,EAAA,KAAK,YAAY,EAAQ,OAKpB,EAAA,KAAK,SAAS,YAAe,EAAA,KAAK,SAAS,KAQ3C,EAAA,KAAK,WAAW,IAuBhB,KAAA,WAAY,EACZ,KAAA,cAAe,EACf,KAAA,MAAO,EAIP,KAAA,YAAc,GACd,KAAA,cAAgB,GAIhB,KAAA,8BACD,EACG,KAAA,YAAY,GAEZ,KAAA,eArCA,KAAA,cAAc,aAAc,OAAS,EAAK,gBAR1C,KAAA,cACH,uBACA,+CA1DN,QAAA,KAAA,EA0GA,EAAA,KAAK,SAAS,EAAM,EAAA,cAIpB,EAAK,UAAU,4BAA8B,WACvC,IAAA,EAAO,KACN,KAAA,OAAS,IAAI,EAAA,OAChB,KAAK,QAAQ,OACb,KAAK,QAAQ,KACb,KAAK,QAAQ,KACb,KAAK,QAAQ,KACb,KAAK,QAAQ,IACb,KAAK,QAAQ,QAEV,KAAA,OAAO,GAAG,UAAW,SAAS,GACjC,EAAK,eAAe,KAEjB,KAAA,OAAO,GAAG,QAAS,SAAS,GAC/B,EAAK,OAAO,eAAgB,KAEzB,KAAA,OAAO,GAAG,eAAgB,WAExB,EAAK,eACR,EAAK,UAAU,UAAW,8BAC1B,EAAK,gBAGJ,KAAA,OAAO,GAAG,QAAS,WAEjB,EAAK,cACR,EAAK,OAAO,gBAAiB,2CAMnC,EAAK,UAAU,YAAc,SAAS,GAChC,IAAA,EAAO,KACP,EAAO,IAAI,eAEX,GADW,KAAK,QAAQ,OAAS,WAAa,WAGhD,KAAK,QAAQ,KACb,IACA,KAAK,QAAQ,KACb,KAAK,QAAQ,KACb,KAAK,QAAQ,IACb,MAEF,GADkB,QAAS,IAAI,MAAO,UAAiB,KAAK,SAI5D,EAAK,KAAK,MAAO,GAAK,GACtB,EAAK,QAAU,SAAS,GACtB,EAAA,KAAK,MAAM,sBAAuB,GAC9B,IAAA,EAAY,GACU,MAAtB,EAAK,QAAQ,MAAgB,EAAK,QAAQ,OAAS,EAAA,KAAK,aAC1D,EACE,mIAIJ,EAAK,OACH,eACA,uCAAyC,IAG7C,EAAK,mBAAqB,WACA,IAApB,EAAK,aAGW,MAAhB,EAAK,OAIT,EAAK,YAAY,EAAK,cAHpB,EAAK,YAKT,EAAK,KAAK,OAIZ,EAAK,UAAU,YAAc,SAAS,GAC/B,KAAA,GAAK,EACL,KAAA,OAAO,MAAM,KAAK,GAAI,KAAK,QAAQ,QAI1C,EAAK,UAAU,eAAiB,SAAS,GACnC,IAGA,EAHA,EAAO,EAAQ,KACf,EAAU,EAAQ,QAClB,EAAO,EAAQ,IAGX,OAAA,GACD,IAAA,OACE,KAAA,KAAK,OAAQ,KAAK,IAClB,KAAA,MAAO,EACZ,MACG,IAAA,QACE,KAAA,OAAO,eAAgB,EAAQ,KACpC,MACG,IAAA,WACE,KAAA,OAAO,iBAAkB,OAAS,KAAK,GAAK,cACjD,MACG,IAAA,cACE,KAAA,OACH,cACA,YAAc,KAAK,QAAQ,IAAM,gBAEnC,MAGG,IAAA,QACH,EAAA,KAAK,IAAI,8BAA+B,GACnC,KAAA,aAAa,GAClB,MAEG,IAAA,SACE,KAAA,UAAU,mBAAoB,6BAA+B,GAClE,MACG,IAAA,QACC,IAAA,EAAe,EAAQ,aASvB,IARJ,EAAa,KAAK,cAAc,EAAM,MAGpC,EAAW,QACX,EAAA,KAAK,KAAK,6CAA8C,IAIrC,UAAjB,EAAQ,KACV,EAAa,IAAI,EAAA,gBAAgB,EAAM,KAAM,CAC3C,aAAc,EACd,SAAU,EACV,SAAU,EAAQ,WAEf,KAAA,eAAe,EAAM,GACrB,KAAA,KAAK,OAAQ,OACb,CAAA,GAAqB,SAAjB,EAAQ,KAajB,YADA,EAAA,KAAK,KAAK,sCAAuC,EAAQ,MAXzD,EAAa,IAAI,EAAA,eAAe,EAAM,KAAM,CAC1C,aAAc,EACd,SAAU,EACV,SAAU,EAAQ,SAClB,MAAO,EAAQ,MACf,cAAe,EAAQ,cACvB,SAAU,EAAQ,WAEf,KAAA,eAAe,EAAM,GACrB,KAAA,KAAK,aAAc,GAOrB,IADD,IAAA,EAAW,KAAK,aAAa,GACxB,EAAI,EAAG,EAAK,EAAS,OAAQ,EAAI,EAAI,GAAK,EACjD,EAAW,cAAc,EAAS,IAGpC,MACG,IAAA,OACE,KAAA,KAAK,OAAQ,GAClB,MACF,QACM,IAAC,EAIH,YAHA,EAAA,KAAK,KACH,yCAA2C,EAAO,YAAc,GAKhE,IAAA,EAAK,EAAQ,cACjB,EAAa,KAAK,cAAc,EAAM,KAEpB,EAAW,GAE3B,EAAW,cAAc,GAChB,EAEJ,KAAA,cAAc,EAAI,GAEvB,EAAA,KAAK,KAAK,wCAAyC,KAO3D,EAAK,UAAU,cAAgB,SAAS,EAAc,GAC/C,KAAK,cAAc,KACjB,KAAA,cAAc,GAAgB,IAEhC,KAAA,cAAc,GAAc,KAAK,IAIxC,EAAK,UAAU,aAAe,SAAS,GACjC,IAAA,EAAW,KAAK,cAAc,GAC9B,OAAA,UACK,KAAK,cAAc,GACnB,GAEA,IAQX,EAAK,UAAU,QAAU,SAAS,EAAM,GAClC,GAAA,KAAK,aAWP,OAVA,EAAA,KAAK,KACH,sPAKG,KAAA,UACH,eACA,+DAIA,IAAA,EAAa,IAAI,EAAA,eAAe,EAAM,KAAM,GAEzC,OADF,KAAA,eAAe,EAAM,GACnB,GAOT,EAAK,UAAU,KAAO,SAAS,EAAM,EAAQ,GACvC,GAAA,KAAK,aAUP,OATA,EAAA,KAAK,KACH,0KAIG,KAAA,UACH,eACA,+DAIA,GAAC,EAAD,EAMJ,EAAU,GAAW,IACb,QAAU,EACd,IAAA,EAAO,IAAI,EAAA,gBAAgB,EAAM,KAAM,GAEpC,OADF,KAAA,eAAe,EAAM,GACnB,EATL,EAAA,KAAK,MACH,kFAYN,EAAK,UAAU,eAAiB,SAAS,EAAM,GACxC,KAAK,YAAY,KACf,KAAA,YAAY,GAAQ,IAEtB,KAAA,YAAY,GAAM,KAAK,IAI9B,EAAK,UAAU,cAAgB,SAAS,EAAM,GACxC,IAAA,EAAc,KAAK,YAAY,GAC/B,IAAC,EACI,OAAA,KAEJ,IAAA,IAAI,EAAI,EAAG,EAAK,EAAY,OAAQ,EAAI,EAAI,IAC3C,GAAA,EAAY,GAAG,KAAO,EACjB,OAAA,EAAY,GAGhB,OAAA,MAGT,EAAK,UAAU,cAAgB,SAAS,EAAM,GACxC,IAAA,EAAO,KACX,EAAA,KAAK,eAAe,WAClB,EAAK,OAAO,EAAM,MAStB,EAAK,UAAU,OAAS,SAAS,EAAM,GACrC,EAAA,KAAK,MAAM,aACN,KAAK,cAGH,KAAA,aAFA,KAAA,UAIF,KAAA,UAAU,EAAM,IAIvB,EAAK,UAAU,UAAY,SAAS,EAAM,GACxC,EAAA,KAAK,MAAM,SAAU,GACF,iBAAR,IACT,EAAM,IAAI,MAAM,IAElB,EAAI,KAAO,EACN,KAAA,KAAK,QAAS,IASrB,EAAK,UAAU,QAAU,WAClB,KAAK,YACH,KAAA,WACA,KAAA,aACA,KAAA,WAAY,IAKrB,EAAK,UAAU,SAAW,WACpB,GAAA,KAAK,YAEF,IADD,IAAA,EAAQ,OAAO,KAAK,KAAK,aACpB,EAAI,EAAG,EAAK,EAAM,OAAQ,EAAI,EAAI,IACpC,KAAA,aAAa,EAAM,IAGvB,KAAA,KAAK,UAIZ,EAAK,UAAU,aAAe,SAAS,GAEhC,IADD,IAAA,EAAc,KAAK,YAAY,GAC1B,EAAI,EAAG,EAAK,EAAY,OAAQ,EAAI,EAAI,GAAK,EACpD,EAAY,GAAG,SAUnB,EAAK,UAAU,WAAa,WACtB,IAAA,EAAO,KACX,EAAA,KAAK,eAAe,WACb,EAAK,eACR,EAAK,cAAe,EACpB,EAAK,MAAO,EACR,EAAK,QACP,EAAK,OAAO,QAEd,EAAK,KAAK,eAAgB,EAAK,IAC/B,EAAK,cAAgB,EAAK,GAC1B,EAAK,GAAK,SAMhB,EAAK,UAAU,UAAY,WACrB,GAAA,KAAK,eAAiB,KAAK,UAC7B,EAAA,KAAK,IAAI,6CAA+C,KAAK,eACxD,KAAA,cAAe,EACf,KAAA,8BACA,KAAA,YAAY,KAAK,mBACjB,CAAA,GAAI,KAAK,UACR,MAAA,IAAI,MACR,4EAEG,GAAK,KAAK,cAAiB,KAAK,KAM/B,MAAA,IAAI,MACR,QACE,KAAK,GACL,qEAPJ,EAAA,KAAK,MACH,oEAiBN,EAAK,UAAU,aAAe,SAAS,GACrC,EAAK,GAAM,aACP,IAAA,EAAO,KACP,EAAO,IAAI,eAEX,GADW,KAAK,QAAQ,OAAS,WAAa,WAGhD,KAAK,QAAQ,KACb,IACA,KAAK,QAAQ,KACb,KAAK,QAAQ,KACb,KAAK,QAAQ,IACb,SAEF,GADkB,QAAS,IAAI,MAAO,UAAiB,KAAK,SAI5D,EAAK,KAAK,MAAO,GAAK,GACtB,EAAK,QAAU,SAAS,GACtB,EAAK,OAAO,eAAgB,wCAC5B,EAAG,KAEL,EAAK,mBAAqB,WACpB,GAAoB,IAApB,EAAK,WAAL,CAGA,GAAgB,MAAhB,EAAK,OAAgB,CACnB,IAAA,EAAe,GAWb,MATJ,EADE,EAAK,QAAQ,OAAS,EAAA,KAAK,WAE3B,sHAIA,2FAGJ,EAAG,IACG,IAAI,MACR,+DACE,GAEqB,MAAhB,EAAK,OACd,EAAG,IAEH,EAAG,KAAK,MAAM,EAAK,iBAGvB,EAAK,KAAK;;AC1hBZ,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,QAAA,YAAA,EAxBA,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,aAKA,EAAA,QAAA,YACA,EAAA,QAAA,qBACA,EAAA,QAAA,oBACA,EAAA,QAAA,UACA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,kBAEA,OAAO,OAAS,EAAA,OAChB,OAAO,gBAAkB,EAAA,gBACzB,OAAO,eAAiB,EAAA,eACxB,OAAO,KAAO,EAAA,KACd,OAAO,kBAAoB,EAAA,kBAC3B,OAAO,sBAAwB,EAAA,sBAC/B,OAAO,gBAAkB,EAAA,gBACzB,OAAO,WAAa,EAAA,WACpB,OAAO,KAAO,EAAA,KACd,OAAO,WAAa,EAAA,QAEpB,QAAA,QAAe,EAAA","file":"peerjs.min.map","sourceRoot":"..\\lib","sourcesContent":["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function(){\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function(){\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window != 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder(){\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function(data) {\r\n  if(typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function() {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if(!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function() {\r\n  this.flush();\r\n  if(binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for(var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n","var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function(data){\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function(data){\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data){\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function(){\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80){\r\n    var positive_fixnum = type;\r\n    return positive_fixnum;\r\n  } else if ((type ^ 0xe0) < 0x20){\r\n    var negative_fixnum = (type ^ 0xe0) - 0x20;\r\n    return negative_fixnum;\r\n  }\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f){\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f){\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f){\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f){\r\n    return this.unpack_map(size);\r\n  }\r\n  switch(type){\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n}\r\n\r\nUnpacker.prototype.unpack_uint8 = function(){\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function(){\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint32 = function(){\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n     ((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint64 = function(){\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n   ((((((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3]) * 256 +\r\n       bytes[4]) * 256 +\r\n       bytes[5]) * 256 +\r\n       bytes[6]) * 256 +\r\n       bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n}\r\n\r\n\r\nUnpacker.prototype.unpack_int8 = function(){\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80 ) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function(){\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000 ) ? uint16 : uint16 - (1 << 16);\r\n}\r\n\r\nUnpacker.prototype.unpack_int32 = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31) ) ? uint32 :\r\n    uint32 - Math.pow(2, 32);\r\n}\r\n\r\nUnpacker.prototype.unpack_int64 = function(){\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63) ) ? uint64 :\r\n    uint64 - Math.pow(2, 64);\r\n}\r\n\r\nUnpacker.prototype.unpack_raw = function(size){\r\n  if ( this.length < this.index + size){\r\n    throw new Error('BinaryPackFailure: index is out of range'\r\n      + ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n    //buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n}\r\n\r\nUnpacker.prototype.unpack_string = function(size){\r\n  var bytes = this.read(size);\r\n  var i = 0, str = '', c, code;\r\n  while(i < size){\r\n    c = bytes[i];\r\n    if ( c < 128){\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32){\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i+1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i+1] & 63) << 6) |\r\n        (bytes[i+2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n  this.index += size;\r\n  return str;\r\n}\r\n\r\nUnpacker.prototype.unpack_array = function(size){\r\n  var objects = new Array(size);\r\n  for(var i = 0; i < size ; i++){\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n}\r\n\r\nUnpacker.prototype.unpack_map = function(size){\r\n  var map = {};\r\n  for(var i = 0; i < size ; i++){\r\n    var key  = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n}\r\n\r\nUnpacker.prototype.unpack_float = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp  = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = ( uint32 & 0x7fffff ) | 0x800000;\r\n  return (sign == 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n}\r\n\r\nUnpacker.prototype.unpack_double = function(){\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp  = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = ( h32 & 0xfffff ) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32   * Math.pow(2, exp - 52);\r\n  return (sign == 0 ? 1 : -1) * frac;\r\n}\r\n\r\nUnpacker.prototype.read = function(length){\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n}\r\n\r\nfunction Packer(){\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function(){\r\n  return this.bufferBuilder.getBuffer();\r\n}\r\n\r\nPacker.prototype.pack = function(value){\r\n  var type = typeof(value);\r\n  if (type == 'string'){\r\n    this.pack_string(value);\r\n  } else if (type == 'number'){\r\n    if (Math.floor(value) === value){\r\n      this.pack_integer(value);\r\n    } else{\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type == 'boolean'){\r\n    if (value === true){\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false){\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type == 'undefined'){\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type == 'object'){\r\n    if (value === null){\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array){\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value){\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if (constructor == Object){\r\n        this.pack_object(value);\r\n      } else if (constructor == Date){\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack == 'function'){\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n}\r\n\r\n\r\nPacker.prototype.pack_bin = function(blob){\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xda) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n}\r\n\r\nPacker.prototype.pack_string = function(str){\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xd8) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n}\r\n\r\nPacker.prototype.pack_array = function(ary){\r\n  var length = ary.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xdc)\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var i = 0; i < length ; i++){\r\n    this.pack(ary[i]);\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_integer = function(num){\r\n  if ( -0x20 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (0x00 <= num && num <= 0xff){\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (-0x80 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if ( 0x0000 <= num && num <= 0xffff){\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (-0x8000 <= num && num <= 0x7fff){\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if ( 0x00000000 <= num && num <= 0xffffffff){\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (-0x80000000 <= num && num <= 0x7fffffff){\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (-0x8000000000000000 <= num && num <= 0x7FFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (0x0000000000000000 <= num && num <= 0xFFFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else{\r\n    throw new Error('Invalid integer');\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_double = function(num){\r\n  var sign = 0;\r\n  if (num < 0){\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp  = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32   = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp+1023) << 20) |\r\n      (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n}\r\n\r\nPacker.prototype.pack_object = function(obj){\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var prop in obj){\r\n    if (obj.hasOwnProperty(prop)){\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_uint8 = function(num){\r\n  this.bufferBuilder.append(num);\r\n}\r\n\r\nPacker.prototype.pack_uint16 = function(num){\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_uint32 = function(num){\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_uint64 = function(num){\r\n  var high = num / Math.pow(2, 32);\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int8 = function(num){\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int16 = function(num){\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int32 = function(num){\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int64 = function(num){\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nfunction _utf8Replace(m){\r\n  var code = m.charCodeAt(0);\r\n\r\n  if(code <= 0x7ff) return '00';\r\n  if(code <= 0xffff) return '000';\r\n  if(code <= 0x1fffff) return '0000';\r\n  if(code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length(str){\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n","import webrtc from \"webrtc-adapter\";\r\n\r\nexport const RTCSessionDescription =\r\n  window.RTCSessionDescription || window.mozRTCSessionDescription;\r\nexport const RTCPeerConnection =\r\n  window.RTCPeerConnection ||\r\n  window.mozRTCPeerConnection ||\r\n  window.webkitRTCPeerConnection;\r\nexport const RTCIceCandidate =\r\n  window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n","var defaultConfig = { iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }] };\r\nvar dataCount = 1;\r\n\r\nimport BinaryPack from \"js-binarypack\";\r\nimport { RTCPeerConnection } from \"./adapter\";\r\n\r\nexport const util = {\r\n  noop: function() {},\r\n\r\n  CLOUD_HOST: \"0.peerjs.com\",\r\n  CLOUD_PORT: 443,\r\n\r\n  // Browsers that need chunking:\r\n  chunkedBrowsers: { Chrome: 1 },\r\n  chunkedMTU: 16300, // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\r\n\r\n  // Logging logic\r\n  logLevel: 0,\r\n  setLogLevel: function(level) {\r\n    var debugLevel = parseInt(level, 10);\r\n    if (!isNaN(parseInt(level, 10))) {\r\n      util.logLevel = debugLevel;\r\n    } else {\r\n      // If they are using truthy/falsy values for debug\r\n      util.logLevel = level ? 3 : 0;\r\n    }\r\n    util.log = util.warn = util.error = util.noop;\r\n    if (util.logLevel > 0) {\r\n      util.error = util._printWith(\"ERROR\");\r\n    }\r\n    if (util.logLevel > 1) {\r\n      util.warn = util._printWith(\"WARNING\");\r\n    }\r\n    if (util.logLevel > 2) {\r\n      util.log = util._print;\r\n    }\r\n  },\r\n  setLogFunction: function(fn) {\r\n    if (fn.constructor !== Function) {\r\n      util.warn(\r\n        \"The log function you passed in is not a function. Defaulting to regular logs.\"\r\n      );\r\n    } else {\r\n      util._print = fn;\r\n    }\r\n  },\r\n\r\n  _printWith: function(prefix) {\r\n    return function() {\r\n      var copy = Array.prototype.slice.call(arguments);\r\n      copy.unshift(prefix);\r\n      util._print.apply(util, copy);\r\n    };\r\n  },\r\n  _print: function() {\r\n    var err = false;\r\n    var copy = Array.prototype.slice.call(arguments);\r\n    copy.unshift(\"PeerJS: \");\r\n    for (var i = 0, l = copy.length; i < l; i++) {\r\n      if (copy[i] instanceof Error) {\r\n        copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\r\n        err = true;\r\n      }\r\n    }\r\n    err ? console.error.apply(console, copy) : console.log.apply(console, copy);\r\n  },\r\n  //\r\n\r\n  // Returns browser-agnostic default config\r\n  defaultConfig: defaultConfig,\r\n  //\r\n\r\n  // Returns the current browser.\r\n  browser: (function() {\r\n    if (window.mozRTCPeerConnection) {\r\n      return \"Firefox\";\r\n    } else if (window.webkitRTCPeerConnection) {\r\n      return \"Chrome\";\r\n    } else if (window.RTCPeerConnection) {\r\n      return \"Supported\";\r\n    } else {\r\n      return \"Unsupported\";\r\n    }\r\n  })(),\r\n  //\r\n\r\n  // Lists which features are supported\r\n  supports: (function() {\r\n    if (typeof RTCPeerConnection === \"undefined\") {\r\n      return {};\r\n    }\r\n\r\n    var data = true;\r\n    var audioVideo = true;\r\n\r\n    var binaryBlob = false;\r\n    var sctp = false;\r\n    var onnegotiationneeded = !!window.webkitRTCPeerConnection;\r\n\r\n    var pc, dc;\r\n    try {\r\n      pc = new RTCPeerConnection(defaultConfig, {\r\n        optional: [{ RtpDataChannels: true }]\r\n      });\r\n    } catch (e) {\r\n      data = false;\r\n      audioVideo = false;\r\n    }\r\n\r\n    if (data) {\r\n      try {\r\n        dc = pc.createDataChannel(\"_PEERJSTEST\");\r\n      } catch (e) {\r\n        data = false;\r\n      }\r\n    }\r\n\r\n    if (data) {\r\n      // Binary test\r\n      try {\r\n        dc.binaryType = \"blob\";\r\n        binaryBlob = true;\r\n      } catch (e) {}\r\n\r\n      // Reliable test.\r\n      // Unfortunately Chrome is a bit unreliable about whether or not they\r\n      // support reliable.\r\n      var reliablePC = new RTCPeerConnection(defaultConfig, {});\r\n      try {\r\n        var reliableDC = reliablePC.createDataChannel(\r\n          \"_PEERJSRELIABLETEST\",\r\n          {}\r\n        );\r\n        sctp = reliableDC.reliable;\r\n      } catch (e) {}\r\n      reliablePC.close();\r\n    }\r\n\r\n    // FIXME: not really the best check...\r\n    if (audioVideo) {\r\n      audioVideo = !!pc.addStream;\r\n    }\r\n\r\n    // FIXME: this is not great because in theory it doesn't work for\r\n    // av-only browsers (?).\r\n    /*\r\n    if (!onnegotiationneeded && data) {\r\n      // sync default check.\r\n      var negotiationPC = new RTCPeerConnection(defaultConfig, {optional: [{RtpDataChannels: true}]});\r\n      negotiationPC.onnegotiationneeded = function() {\r\n        onnegotiationneeded = true;\r\n        // async check.\r\n        if (util && util.supports) {\r\n          util.supports.onnegotiationneeded = true;\r\n        }\r\n      };\r\n      negotiationPC.createDataChannel('_PEERJSNEGOTIATIONTEST');\r\n\r\n      setTimeout(function() {\r\n        negotiationPC.close();\r\n      }, 1000);\r\n    }\r\n    */\r\n\r\n    if (pc) {\r\n      pc.close();\r\n    }\r\n\r\n    return {\r\n      audioVideo: audioVideo,\r\n      data: data,\r\n      binaryBlob: binaryBlob,\r\n      binary: sctp, // deprecated; sctp implies binary support.\r\n      reliable: sctp, // deprecated; sctp implies reliable data.\r\n      sctp: sctp,\r\n      onnegotiationneeded: onnegotiationneeded\r\n    };\r\n  })(),\r\n  //\r\n\r\n  // Ensure alphanumeric ids\r\n  validateId: function(id) {\r\n    // Allow empty ids\r\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(id);\r\n  },\r\n\r\n  validateKey: function(key) {\r\n    // Allow empty keys\r\n    return !key || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(key);\r\n  },\r\n\r\n  debug: false,\r\n\r\n  inherits: function(ctor, superCtor) {\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  },\r\n  extend: function(dest, source) {\r\n    for (var key in source) {\r\n      if (source.hasOwnProperty(key)) {\r\n        dest[key] = source[key];\r\n      }\r\n    }\r\n    return dest;\r\n  },\r\n  pack: BinaryPack.pack,\r\n  unpack: BinaryPack.unpack,\r\n\r\n  log: function() {\r\n    if (util.debug) {\r\n      var err = false;\r\n      var copy = Array.prototype.slice.call(arguments);\r\n      copy.unshift(\"PeerJS: \");\r\n      for (var i = 0, l = copy.length; i < l; i++) {\r\n        if (copy[i] instanceof Error) {\r\n          copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\r\n          err = true;\r\n        }\r\n      }\r\n      err\r\n        ? console.error.apply(console, copy)\r\n        : console.log.apply(console, copy);\r\n    }\r\n  },\r\n\r\n  setZeroTimeout: (function(global) {\r\n    var timeouts = [];\r\n    var messageName = \"zero-timeout-message\";\r\n\r\n    // Like setTimeout, but only takes a function argument.\t There's\r\n    // no time argument (always zero) and no arguments (you have to\r\n    // use a closure).\r\n    function setZeroTimeoutPostMessage(fn) {\r\n      timeouts.push(fn);\r\n      global.postMessage(messageName, \"*\");\r\n    }\r\n\r\n    function handleMessage(event) {\r\n      if (event.source == global && event.data == messageName) {\r\n        if (event.stopPropagation) {\r\n          event.stopPropagation();\r\n        }\r\n        if (timeouts.length) {\r\n          timeouts.shift()();\r\n        }\r\n      }\r\n    }\r\n    if (global.addEventListener) {\r\n      global.addEventListener(\"message\", handleMessage, true);\r\n    } else if (global.attachEvent) {\r\n      global.attachEvent(\"onmessage\", handleMessage);\r\n    }\r\n    return setZeroTimeoutPostMessage;\r\n  })(window),\r\n\r\n  // Binary stuff\r\n\r\n  // chunks a blob.\r\n  chunk: function(bl) {\r\n    var chunks = [];\r\n    var size = bl.size;\r\n    var index;\r\n    var start = (index = 0);\r\n    var total = Math.ceil(size / util.chunkedMTU);\r\n    while (start < size) {\r\n      var end = Math.min(size, start + util.chunkedMTU);\r\n      var b = bl.slice(start, end);\r\n\r\n      var chunk = {\r\n        __peerData: dataCount,\r\n        n: index,\r\n        data: b,\r\n        total: total\r\n      };\r\n\r\n      chunks.push(chunk);\r\n\r\n      start = end;\r\n      index += 1;\r\n    }\r\n    dataCount += 1;\r\n    return chunks;\r\n  },\r\n\r\n  blobToArrayBuffer: function(blob, cb) {\r\n    var fr = new FileReader();\r\n    fr.onload = function(evt) {\r\n      cb(evt.target.result);\r\n    };\r\n    fr.readAsArrayBuffer(blob);\r\n  },\r\n  blobToBinaryString: function(blob, cb) {\r\n    var fr = new FileReader();\r\n    fr.onload = function(evt) {\r\n      cb(evt.target.result);\r\n    };\r\n    fr.readAsBinaryString(blob);\r\n  },\r\n  binaryStringToArrayBuffer: function(binary) {\r\n    var byteArray = new Uint8Array(binary.length);\r\n    for (var i = 0; i < binary.length; i++) {\r\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\r\n    }\r\n    return byteArray.buffer;\r\n  },\r\n  randomToken: function() {\r\n    return Math.random()\r\n      .toString(36)\r\n      .substr(2);\r\n  },\r\n  //\r\n\r\n  isSecure: function() {\r\n    return location.protocol === \"https:\";\r\n  }\r\n};\r\n","'use strict';\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  if (!this._events || !this._events[event]) return [];\n  if (this._events[event].fn) return [this._events[event].fn];\n\n  for (var i = 0, l = this._events[event].length, ee = new Array(l); i < l; i++) {\n    ee[i] = this._events[event][i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  if (!this._events || !this._events[event]) return false;\n\n  var listeners = this._events[event]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, once) {\n  if (!this._events || !this._events[event]) return this;\n\n  var listeners = this._events[event]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn && (listeners.fn !== fn || (once && !listeners.once))) {\n      events.push(listeners);\n    }\n    if (!listeners.fn) for (var i = 0, length = listeners.length; i < length; i++) {\n      if (listeners[i].fn !== fn || (once && !listeners[i].once)) {\n        events.push(listeners[i]);\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[event] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[event];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[event];\n  else this._events = {};\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the module.\n//\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.EventEmitter2 = EventEmitter;\nEventEmitter.EventEmitter3 = EventEmitter;\n\n//\n// Expose the module.\n//\nmodule.exports = EventEmitter;\n","import { util } from \"./util\";\r\nimport { EventEmitter } from \"eventemitter3\";\r\n\r\n/**\r\n * An abstraction on top of WebSockets and XHR streaming to provide fastest\r\n * possible connection for peers.\r\n */\r\nexport function Socket(secure, host, port, path, key, wsport) {\r\n  if (!(this instanceof Socket))\r\n    return new Socket(secure, host, port, path, key, wsport);\r\n\r\n  wsport = wsport || port;\r\n\r\n  EventEmitter.call(this);\r\n\r\n  // Disconnected manually.\r\n  this.disconnected = false;\r\n  this._queue = [];\r\n\r\n  var httpProtocol = secure ? \"https://\" : \"http://\";\r\n  var wsProtocol = secure ? \"wss://\" : \"ws://\";\r\n  this._httpUrl = httpProtocol + host + \":\" + port + path + key;\r\n  this._wsUrl = wsProtocol + host + \":\" + wsport + path + \"peerjs?key=\" + key;\r\n}\r\n\r\nutil.inherits(Socket, EventEmitter);\r\n\r\n/** Check in with ID or get one from server. */\r\nSocket.prototype.start = function(id, token) {\r\n  this.id = id;\r\n\r\n  this._httpUrl += \"/\" + id + \"/\" + token;\r\n  this._wsUrl += \"&id=\" + id + \"&token=\" + token;\r\n\r\n  this._startXhrStream();\r\n  this._startWebSocket();\r\n};\r\n\r\n/** Start up websocket communications. */\r\nSocket.prototype._startWebSocket = function(id) {\r\n  var self = this;\r\n\r\n  if (this._socket) {\r\n    return;\r\n  }\r\n\r\n  this._socket = new WebSocket(this._wsUrl);\r\n\r\n  this._socket.onmessage = function(event) {\r\n    try {\r\n      var data = JSON.parse(event.data);\r\n    } catch (e) {\r\n      util.log(\"Invalid server message\", event.data);\r\n      return;\r\n    }\r\n    self.emit(\"message\", data);\r\n  };\r\n\r\n  this._socket.onclose = function(event) {\r\n    util.log(\"Socket closed.\");\r\n    self.disconnected = true;\r\n    self.emit(\"disconnected\");\r\n  };\r\n\r\n  // Take care of the queue of connections if necessary and make sure Peer knows\r\n  // socket is open.\r\n  this._socket.onopen = function() {\r\n    if (self._timeout) {\r\n      clearTimeout(self._timeout);\r\n      setTimeout(function() {\r\n        self._http.abort();\r\n        self._http = null;\r\n      }, 5000);\r\n    }\r\n    self._sendQueuedMessages();\r\n    util.log(\"Socket open\");\r\n  };\r\n};\r\n\r\n/** Start XHR streaming. */\r\nSocket.prototype._startXhrStream = function(n) {\r\n  try {\r\n    var self = this;\r\n    this._http = new XMLHttpRequest();\r\n    this._http._index = 1;\r\n    this._http._streamIndex = n || 0;\r\n    this._http.open(\r\n      \"post\",\r\n      this._httpUrl + \"/id?i=\" + this._http._streamIndex,\r\n      true\r\n    );\r\n    this._http.onerror = function() {\r\n      // If we get an error, likely something went wrong.\r\n      // Stop streaming.\r\n      clearTimeout(self._timeout);\r\n      self.emit(\"disconnected\");\r\n    };\r\n    this._http.onreadystatechange = function() {\r\n      if (this.readyState == 2 && this.old) {\r\n        this.old.abort();\r\n        delete this.old;\r\n      } else if (\r\n        this.readyState > 2 &&\r\n        this.status === 200 &&\r\n        this.responseText\r\n      ) {\r\n        self._handleStream(this);\r\n      }\r\n    };\r\n    this._http.send(null);\r\n    this._setHTTPTimeout();\r\n  } catch (e) {\r\n    util.log(\"XMLHttpRequest not available; defaulting to WebSockets\");\r\n  }\r\n};\r\n\r\n/** Handles onreadystatechange response as a stream. */\r\nSocket.prototype._handleStream = function(http) {\r\n  // 3 and 4 are loading/done state. All others are not relevant.\r\n  var messages = http.responseText.split(\"\\n\");\r\n\r\n  // Check to see if anything needs to be processed on buffer.\r\n  if (http._buffer) {\r\n    while (http._buffer.length > 0) {\r\n      var index = http._buffer.shift();\r\n      var bufferedMessage = messages[index];\r\n      try {\r\n        bufferedMessage = JSON.parse(bufferedMessage);\r\n      } catch (e) {\r\n        http._buffer.shift(index);\r\n        break;\r\n      }\r\n      this.emit(\"message\", bufferedMessage);\r\n    }\r\n  }\r\n\r\n  var message = messages[http._index];\r\n  if (message) {\r\n    http._index += 1;\r\n    // Buffering--this message is incomplete and we'll get to it next time.\r\n    // This checks if the httpResponse ended in a `\\n`, in which case the last\r\n    // element of messages should be the empty string.\r\n    if (http._index === messages.length) {\r\n      if (!http._buffer) {\r\n        http._buffer = [];\r\n      }\r\n      http._buffer.push(http._index - 1);\r\n    } else {\r\n      try {\r\n        message = JSON.parse(message);\r\n      } catch (e) {\r\n        util.log(\"Invalid server message\", message);\r\n        return;\r\n      }\r\n      this.emit(\"message\", message);\r\n    }\r\n  }\r\n};\r\n\r\nSocket.prototype._setHTTPTimeout = function() {\r\n  var self = this;\r\n  this._timeout = setTimeout(function() {\r\n    var old = self._http;\r\n    if (!self._wsOpen()) {\r\n      self._startXhrStream(old._streamIndex + 1);\r\n      self._http.old = old;\r\n    } else {\r\n      old.abort();\r\n    }\r\n  }, 25000);\r\n};\r\n\r\n/** Is the websocket currently open? */\r\nSocket.prototype._wsOpen = function() {\r\n  return this._socket && this._socket.readyState == 1;\r\n};\r\n\r\n/** Send queued messages. */\r\nSocket.prototype._sendQueuedMessages = function() {\r\n  for (var i = 0, ii = this._queue.length; i < ii; i += 1) {\r\n    this.send(this._queue[i]);\r\n  }\r\n};\r\n\r\n/** Exposed send for DC & Peer. */\r\nSocket.prototype.send = function(data) {\r\n  if (this.disconnected) {\r\n    return;\r\n  }\r\n\r\n  // If we didn't get an ID yet, we can't yet send anything so we should queue\r\n  // up these messages.\r\n  if (!this.id) {\r\n    this._queue.push(data);\r\n    return;\r\n  }\r\n\r\n  if (!data.type) {\r\n    this.emit(\"error\", \"Invalid message\");\r\n    return;\r\n  }\r\n\r\n  var message = JSON.stringify(data);\r\n  if (this._wsOpen()) {\r\n    this._socket.send(message);\r\n  } else {\r\n    var http = new XMLHttpRequest();\r\n    var url = this._httpUrl + \"/\" + data.type.toLowerCase();\r\n    http.open(\"post\", url, true);\r\n    http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    http.send(message);\r\n  }\r\n};\r\n\r\nSocket.prototype.close = function() {\r\n  if (!this.disconnected && this._wsOpen()) {\r\n    this._socket.close();\r\n    this.disconnected = true;\r\n  }\r\n};\r\n","import { util } from \"./util\";\r\nimport {\r\n  RTCPeerConnection,\r\n  RTCSessionDescription,\r\n  RTCIceCandidate\r\n} from \"./adapter\";\r\n\r\n/**\r\n * Manages all negotiations between Peers.\r\n */\r\nexport const Negotiator = {\r\n  pcs: {\r\n    data: {},\r\n    media: {}\r\n  }, // type => {peerId: {pc_id: pc}}.\r\n  //providers: {}, // provider's id => providers (there may be multiple providers/client.\r\n  queue: [] // connections that are delayed due to a PC being in use.\r\n};\r\n\r\nNegotiator._idPrefix = \"pc_\";\r\n\r\n/** Returns a PeerConnection object set up correctly (for data, media). */\r\nNegotiator.startConnection = function(connection, options) {\r\n  var pc = Negotiator._getPeerConnection(connection, options);\r\n\r\n  // Set the connection's PC.\r\n  connection.pc = connection.peerConnection = pc;\r\n\r\n  if (connection.type === \"media\" && options._stream) {\r\n    addStreamToConnection(options._stream, pc);\r\n  }\r\n\r\n  // What do we need to do now?\r\n  if (options.originator) {\r\n    if (connection.type === \"data\") {\r\n      // Create the datachannel.\r\n      var config = {};\r\n      // Dropping reliable:false support, since it seems to be crashing\r\n      // Chrome.\r\n      /*if (util.supports.sctp && !options.reliable) {\r\n        // If we have canonical reliable support...\r\n        config = {maxRetransmits: 0};\r\n      }*/\r\n      // Fallback to ensure older browsers don't crash.\r\n      if (!util.supports.sctp) {\r\n        config = { reliable: options.reliable };\r\n      }\r\n      var dc = pc.createDataChannel(connection.label, config);\r\n      connection.initialize(dc);\r\n    }\r\n\r\n    Negotiator._makeOffer(connection);\r\n  } else {\r\n    Negotiator.handleSDP(\"OFFER\", connection, options.sdp);\r\n  }\r\n};\r\n\r\nNegotiator._getPeerConnection = function(connection, options) {\r\n  if (!Negotiator.pcs[connection.type]) {\r\n    util.error(\r\n      connection.type +\r\n        \" is not a valid connection type. Maybe you overrode the `type` property somewhere.\"\r\n    );\r\n  }\r\n\r\n  if (!Negotiator.pcs[connection.type][connection.peer]) {\r\n    Negotiator.pcs[connection.type][connection.peer] = {};\r\n  }\r\n  var peerConnections = Negotiator.pcs[connection.type][connection.peer];\r\n\r\n  var pc;\r\n  // Not multiplexing while FF and Chrome have not-great support for it.\r\n  /*if (options.multiplex) {\r\n    ids = Object.keys(peerConnections);\r\n    for (var i = 0, ii = ids.length; i < ii; i += 1) {\r\n      pc = peerConnections[ids[i]];\r\n      if (pc.signalingState === 'stable') {\r\n        break; // We can go ahead and use this PC.\r\n      }\r\n    }\r\n  } else */\r\n  if (options.pc) {\r\n    // Simplest case: PC id already provided for us.\r\n    pc = Negotiator.pcs[connection.type][connection.peer][options.pc];\r\n  }\r\n\r\n  if (!pc || pc.signalingState !== \"stable\") {\r\n    pc = Negotiator._startPeerConnection(connection);\r\n  }\r\n  return pc;\r\n};\r\n\r\n/*\r\nNegotiator._addProvider = function(provider) {\r\n  if ((!provider.id && !provider.disconnected) || !provider.socket.open) {\r\n    // Wait for provider to obtain an ID.\r\n    provider.on('open', function(id) {\r\n      Negotiator._addProvider(provider);\r\n    });\r\n  } else {\r\n    Negotiator.providers[provider.id] = provider;\r\n  }\r\n}*/\r\n\r\n/** Start a PC. */\r\nNegotiator._startPeerConnection = function(connection) {\r\n  util.log(\"Creating RTCPeerConnection.\");\r\n\r\n  var id = Negotiator._idPrefix + util.randomToken();\r\n  var optional = {};\r\n\r\n  if (connection.type === \"data\" && !util.supports.sctp) {\r\n    optional = { optional: [{ RtpDataChannels: true }] };\r\n  } else if (connection.type === \"media\") {\r\n    // Interop req for chrome.\r\n    optional = { optional: [{ DtlsSrtpKeyAgreement: true }] };\r\n  }\r\n\r\n  var pc = new RTCPeerConnection(connection.provider.options.config, optional);\r\n  Negotiator.pcs[connection.type][connection.peer][id] = pc;\r\n\r\n  Negotiator._setupListeners(connection, pc, id);\r\n\r\n  return pc;\r\n};\r\n\r\n/** Set up various WebRTC listeners. */\r\nNegotiator._setupListeners = function(connection, pc, pc_id) {\r\n  var peerId = connection.peer;\r\n  var connectionId = connection.id;\r\n  var provider = connection.provider;\r\n\r\n  // ICE CANDIDATES.\r\n  util.log(\"Listening for ICE candidates.\");\r\n  pc.onicecandidate = function(evt) {\r\n    if (evt.candidate) {\r\n      util.log(\"Received ICE candidates for:\", connection.peer);\r\n      provider.socket.send({\r\n        type: \"CANDIDATE\",\r\n        payload: {\r\n          candidate: evt.candidate,\r\n          type: connection.type,\r\n          connectionId: connection.id\r\n        },\r\n        dst: peerId\r\n      });\r\n    }\r\n  };\r\n\r\n  pc.oniceconnectionstatechange = function() {\r\n    switch (pc.iceConnectionState) {\r\n      case \"failed\":\r\n        util.log(\r\n          \"iceConnectionState is disconnected, closing connections to \" + peerId\r\n        );\r\n        connection.emit(\r\n          \"error\",\r\n          new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\r\n        );\r\n        connection.close();\r\n        break;\r\n      case \"disconnected\":\r\n        util.log(\r\n          \"iceConnectionState is disconnected, closing connections to \" + peerId\r\n        );\r\n        break;\r\n      case \"completed\":\r\n        pc.onicecandidate = util.noop;\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Fallback for older Chrome impls.\r\n  pc.onicechange = pc.oniceconnectionstatechange;\r\n\r\n  // DATACONNECTION.\r\n  util.log(\"Listening for data channel\");\r\n  // Fired between offer and answer, so options should already be saved\r\n  // in the options hash.\r\n  pc.ondatachannel = function(evt) {\r\n    util.log(\"Received data channel\");\r\n    var dc = evt.channel;\r\n    var connection = provider.getConnection(peerId, connectionId);\r\n    connection.initialize(dc);\r\n  };\r\n\r\n  // MEDIACONNECTION.\r\n  util.log(\"Listening for remote stream\");\r\n  pc.ontrack = function(evt) {\r\n    util.log(\"Received remote stream\");\r\n    var stream = evt.streams[0];\r\n    var connection = provider.getConnection(peerId, connectionId);\r\n    if (connection.type === \"media\") {\r\n      addStreamToConnection(stream, connection);\r\n    }\r\n  };\r\n};\r\n\r\nNegotiator.cleanup = function(connection) {\r\n  util.log(\"Cleaning up PeerConnection to \" + connection.peer);\r\n\r\n  var pc = connection.pc;\r\n\r\n  if (\r\n    !!pc &&\r\n    ((pc.readyState && pc.readyState !== \"closed\") ||\r\n      pc.signalingState !== \"closed\")\r\n  ) {\r\n    pc.close();\r\n    connection.pc = null;\r\n  }\r\n};\r\n\r\nNegotiator._makeOffer = function(connection) {\r\n  var pc: RTCPeerConnection = connection.pc;\r\n  const callback = function(offer) {\r\n    util.log(\"Created offer.\");\r\n\r\n    if (\r\n      !util.supports.sctp &&\r\n      connection.type === \"data\" &&\r\n      connection.reliable\r\n    ) {\r\n      offer.sdp = Reliable.higherBandwidthSDP(offer.sdp);\r\n    }\r\n    const descCallback = function() {\r\n      util.log(\"Set localDescription: offer\", \"for:\", connection.peer);\r\n      connection.provider.socket.send({\r\n        type: \"OFFER\",\r\n        payload: {\r\n          sdp: offer,\r\n          type: connection.type,\r\n          label: connection.label,\r\n          connectionId: connection.id,\r\n          reliable: connection.reliable,\r\n          serialization: connection.serialization,\r\n          metadata: connection.metadata,\r\n          browser: util.browser\r\n        },\r\n        dst: connection.peer\r\n      });\r\n    }\r\n    const descError = function(err) {\r\n      // TODO: investigate why _makeOffer is being called from the answer\r\n      if (\r\n        err !=\r\n        \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\r\n      ) {\r\n        connection.provider.emitError(\"webrtc\", err);\r\n        util.log(\"Failed to setLocalDescription, \", err);\r\n      }\r\n    }\r\n    pc.setLocalDescription(offer)\r\n    .then(() => descCallback())\r\n    .catch(err => descError(err));\r\n  }\r\n  const errorHandler = function(err) {\r\n    connection.provider.emitError(\"webrtc\", err);\r\n    util.log(\"Failed to createOffer, \", err);\r\n  }\r\n  pc.createOffer(connection.options.constraints)\r\n    .then(offer => callback(offer))\r\n    .catch(err => errorHandler(err));\r\n};\r\n\r\nNegotiator._makeAnswer = function(connection) {\r\n  var pc: RTCPeerConnection = connection.pc;\r\n  const callback = function(answer) {\r\n    util.log(\"Created answer.\");\r\n\r\n    if (\r\n      !util.supports.sctp &&\r\n      connection.type === \"data\" &&\r\n      connection.reliable\r\n    ) {\r\n      answer.sdp = Reliable.higherBandwidthSDP(answer.sdp);\r\n    }\r\n\r\n    const descCallback = function() {\r\n      util.log(\"Set localDescription: answer\", \"for:\", connection.peer);\r\n      connection.provider.socket.send({\r\n        type: \"ANSWER\",\r\n        payload: {\r\n          sdp: answer,\r\n          type: connection.type,\r\n          connectionId: connection.id,\r\n          browser: util.browser\r\n        },\r\n        dst: connection.peer\r\n      });\r\n    }\r\n    pc.setLocalDescription(answer)\r\n    .then(() => descCallback())\r\n    .catch(err => {\r\n        connection.provider.emitError(\"webrtc\", err);\r\n        util.log(\"Failed to setLocalDescription, \", err);\r\n      });\r\n  };\r\n  pc.createAnswer()\r\n  .then(answer => callback(answer))\r\n  .catch(err => {\r\n    connection.provider.emitError(\"webrtc\", err);\r\n    util.log(\"Failed to create answer, \", err);\r\n  });\r\n};\r\n\r\n/** Handle an SDP. */\r\nNegotiator.handleSDP = function(type, connection, sdp) {\r\n  sdp = new RTCSessionDescription(sdp);\r\n  const pc: RTCPeerConnection = connection.pc;\r\n\r\n  util.log(\"Setting remote description\", sdp);\r\n\r\n  const callback = function() {\r\n    util.log(\"Set remoteDescription:\", type, \"for:\", connection.peer);\r\n\r\n    if (type === \"OFFER\") {\r\n      Negotiator._makeAnswer(connection);\r\n    }\r\n  };\r\n\r\n  pc.setRemoteDescription(sdp)\r\n  .then(() => callback())\r\n  .catch(err => {\r\n      connection.provider.emitError(\"webrtc\", err);\r\n      util.log(\"Failed to setRemoteDescription, \", err);\r\n    }\r\n  );\r\n};\r\n\r\n/** Handle a candidate. */\r\nNegotiator.handleCandidate = function(connection, ice) {\r\n  var candidate = ice.candidate;\r\n  var sdpMLineIndex = ice.sdpMLineIndex;\r\n  connection.pc.addIceCandidate(\r\n    new RTCIceCandidate({\r\n      sdpMLineIndex: sdpMLineIndex,\r\n      candidate: candidate\r\n    })\r\n  );\r\n  util.log(\"Added ICE candidate for:\", connection.peer);\r\n};\r\n\r\nfunction addStreamToConnection(stream: MediaStream, connection: RTCPeerConnection) {\r\n  if ('addTrack' in connection) {\r\n    stream.getTracks().forEach(track => {\r\n      connection.addTrack(track, stream);\r\n    });\r\n  } else if ('addStream' in connection) {\r\n    (<any>connection).addStream(stream);\r\n  }\r\n}\r\n","import { util } from \"./util\";\r\nimport { EventEmitter } from \"eventemitter3\";\r\nimport { Negotiator } from \"./negotiator\";\r\n\r\n/**\r\n * Wraps the streaming interface between two Peers.\r\n */\r\nexport function MediaConnection(peer, provider, options) {\r\n  if (!(this instanceof MediaConnection))\r\n    return new MediaConnection(peer, provider, options);\r\n  EventEmitter.call(this);\r\n\r\n  this.options = util.extend({}, options);\r\n\r\n  this.open = false;\r\n  this.type = \"media\";\r\n  this.peer = peer;\r\n  this.provider = provider;\r\n  this.metadata = this.options.metadata;\r\n  this.localStream = this.options._stream;\r\n\r\n  this.id =\r\n    this.options.connectionId || MediaConnection._idPrefix + util.randomToken();\r\n  if (this.localStream) {\r\n    Negotiator.startConnection(this, {\r\n      _stream: this.localStream,\r\n      originator: true\r\n    });\r\n  }\r\n}\r\n\r\nutil.inherits(MediaConnection, EventEmitter);\r\n\r\nMediaConnection._idPrefix = \"mc_\";\r\n\r\nMediaConnection.prototype.addStream = function(remoteStream) {\r\n  util.log(\"Receiving stream\", remoteStream);\r\n\r\n  this.remoteStream = remoteStream;\r\n  this.emit(\"stream\", remoteStream); // Should we call this `open`?\r\n};\r\n\r\nMediaConnection.prototype.handleMessage = function(message) {\r\n  var payload = message.payload;\r\n\r\n  switch (message.type) {\r\n    case \"ANSWER\":\r\n      // Forward to negotiator\r\n      Negotiator.handleSDP(message.type, this, payload.sdp);\r\n      this.open = true;\r\n      break;\r\n    case \"CANDIDATE\":\r\n      Negotiator.handleCandidate(this, payload.candidate);\r\n      break;\r\n    default:\r\n      util.warn(\r\n        \"Unrecognized message type:\",\r\n        message.type,\r\n        \"from peer:\",\r\n        this.peer\r\n      );\r\n      break;\r\n  }\r\n};\r\n\r\nMediaConnection.prototype.answer = function(stream) {\r\n  if (this.localStream) {\r\n    util.warn(\r\n      \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  this.options._payload._stream = stream;\r\n\r\n  this.localStream = stream;\r\n  Negotiator.startConnection(this, this.options._payload);\r\n  // Retrieve lost messages stored because PeerConnection not set up.\r\n  var messages = this.provider._getMessages(this.id);\r\n  for (var i = 0, ii = messages.length; i < ii; i += 1) {\r\n    this.handleMessage(messages[i]);\r\n  }\r\n  this.open = true;\r\n};\r\n\r\n/**\r\n * Exposed functionality for users.\r\n */\r\n\r\n/** Allows user to close connection. */\r\nMediaConnection.prototype.close = function() {\r\n  if (!this.open) {\r\n    return;\r\n  }\r\n  this.open = false;\r\n  Negotiator.cleanup(this);\r\n  this.emit(\"close\");\r\n};\r\n","var BinaryPack = require('js-binarypack');\r\n\r\nvar util = {\r\n  debug: false,\r\n  \r\n  inherits: function(ctor, superCtor) {\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  },\r\n  extend: function(dest, source) {\r\n    for(var key in source) {\r\n      if(source.hasOwnProperty(key)) {\r\n        dest[key] = source[key];\r\n      }\r\n    }\r\n    return dest;\r\n  },\r\n  pack: BinaryPack.pack,\r\n  unpack: BinaryPack.unpack,\r\n  \r\n  log: function () {\r\n    if (util.debug) {\r\n      var copy = [];\r\n      for (var i = 0; i < arguments.length; i++) {\r\n        copy[i] = arguments[i];\r\n      }\r\n      copy.unshift('Reliable: ');\r\n      console.log.apply(console, copy);\r\n    }\r\n  },\r\n\r\n  setZeroTimeout: (function(global) {\r\n    var timeouts = [];\r\n    var messageName = 'zero-timeout-message';\r\n\r\n    // Like setTimeout, but only takes a function argument.\t There's\r\n    // no time argument (always zero) and no arguments (you have to\r\n    // use a closure).\r\n    function setZeroTimeoutPostMessage(fn) {\r\n      timeouts.push(fn);\r\n      global.postMessage(messageName, '*');\r\n    }\t\t\r\n\r\n    function handleMessage(event) {\r\n      if (event.source == global && event.data == messageName) {\r\n        if (event.stopPropagation) {\r\n          event.stopPropagation();\r\n        }\r\n        if (timeouts.length) {\r\n          timeouts.shift()();\r\n        }\r\n      }\r\n    }\r\n    if (global.addEventListener) {\r\n      global.addEventListener('message', handleMessage, true);\r\n    } else if (global.attachEvent) {\r\n      global.attachEvent('onmessage', handleMessage);\r\n    }\r\n    return setZeroTimeoutPostMessage;\r\n  }(this)),\r\n  \r\n  blobToArrayBuffer: function(blob, cb){\r\n    var fr = new FileReader();\r\n    fr.onload = function(evt) {\r\n      cb(evt.target.result);\r\n    };\r\n    fr.readAsArrayBuffer(blob);\r\n  },\r\n  blobToBinaryString: function(blob, cb){\r\n    var fr = new FileReader();\r\n    fr.onload = function(evt) {\r\n      cb(evt.target.result);\r\n    };\r\n    fr.readAsBinaryString(blob);\r\n  },\r\n  binaryStringToArrayBuffer: function(binary) {\r\n    var byteArray = new Uint8Array(binary.length);\r\n    for (var i = 0; i < binary.length; i++) {\r\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\r\n    }\r\n    return byteArray.buffer;\r\n  },\r\n  randomToken: function () {\r\n    return Math.random().toString(36).substr(2);\r\n  }\r\n};\r\n\r\nmodule.exports = util;\r\n","var util = require('./util');\r\n\r\n/**\r\n * Reliable transfer for Chrome Canary DataChannel impl.\r\n * Author: @michellebu\r\n */\r\nfunction Reliable(dc, debug) {\r\n  if (!(this instanceof Reliable)) return new Reliable(dc);\r\n  this._dc = dc;\r\n\r\n  util.debug = debug;\r\n\r\n  // Messages sent/received so far.\r\n  // id: { ack: n, chunks: [...] }\r\n  this._outgoing = {};\r\n  // id: { ack: ['ack', id, n], chunks: [...] }\r\n  this._incoming = {};\r\n  this._received = {};\r\n\r\n  // Window size.\r\n  this._window = 1000;\r\n  // MTU.\r\n  this._mtu = 500;\r\n  // Interval for setInterval. In ms.\r\n  this._interval = 0;\r\n\r\n  // Messages sent.\r\n  this._count = 0;\r\n\r\n  // Outgoing message queue.\r\n  this._queue = [];\r\n\r\n  this._setupDC();\r\n};\r\n\r\n// Send a message reliably.\r\nReliable.prototype.send = function(msg) {\r\n  // Determine if chunking is necessary.\r\n  var bl = util.pack(msg);\r\n  if (bl.size < this._mtu) {\r\n    this._handleSend(['no', bl]);\r\n    return;\r\n  }\r\n\r\n  this._outgoing[this._count] = {\r\n    ack: 0,\r\n    chunks: this._chunk(bl)\r\n  };\r\n\r\n  if (util.debug) {\r\n    this._outgoing[this._count].timer = new Date();\r\n  }\r\n\r\n  // Send prelim window.\r\n  this._sendWindowedChunks(this._count);\r\n  this._count += 1;\r\n};\r\n\r\n// Set up interval for processing queue.\r\nReliable.prototype._setupInterval = function() {\r\n  // TODO: fail gracefully.\r\n\r\n  var self = this;\r\n  this._timeout = setInterval(function() {\r\n    // FIXME: String stuff makes things terribly async.\r\n    var msg = self._queue.shift();\r\n    if (msg._multiple) {\r\n      for (var i = 0, ii = msg.length; i < ii; i += 1) {\r\n        self._intervalSend(msg[i]);\r\n      }\r\n    } else {\r\n      self._intervalSend(msg);\r\n    }\r\n  }, this._interval);\r\n};\r\n\r\nReliable.prototype._intervalSend = function(msg) {\r\n  var self = this;\r\n  msg = util.pack(msg);\r\n  util.blobToBinaryString(msg, function(str) {\r\n    self._dc.send(str);\r\n  });\r\n  if (self._queue.length === 0) {\r\n    clearTimeout(self._timeout);\r\n    self._timeout = null;\r\n    //self._processAcks();\r\n  }\r\n};\r\n\r\n// Go through ACKs to send missing pieces.\r\nReliable.prototype._processAcks = function() {\r\n  for (var id in this._outgoing) {\r\n    if (this._outgoing.hasOwnProperty(id)) {\r\n      this._sendWindowedChunks(id);\r\n    }\r\n  }\r\n};\r\n\r\n// Handle sending a message.\r\n// FIXME: Don't wait for interval time for all messages...\r\nReliable.prototype._handleSend = function(msg) {\r\n  var push = true;\r\n  for (var i = 0, ii = this._queue.length; i < ii; i += 1) {\r\n    var item = this._queue[i];\r\n    if (item === msg) {\r\n      push = false;\r\n    } else if (item._multiple && item.indexOf(msg) !== -1) {\r\n      push = false;\r\n    }\r\n  }\r\n  if (push) {\r\n    this._queue.push(msg);\r\n    if (!this._timeout) {\r\n      this._setupInterval();\r\n    }\r\n  }\r\n};\r\n\r\n// Set up DataChannel handlers.\r\nReliable.prototype._setupDC = function() {\r\n  // Handle various message types.\r\n  var self = this;\r\n  this._dc.onmessage = function(e) {\r\n    var msg = e.data;\r\n    var datatype = msg.constructor;\r\n    // FIXME: msg is String until binary is supported.\r\n    // Once that happens, this will have to be smarter.\r\n    if (datatype === String) {\r\n      var ab = util.binaryStringToArrayBuffer(msg);\r\n      msg = util.unpack(ab);\r\n      self._handleMessage(msg);\r\n    }\r\n  };\r\n};\r\n\r\n// Handles an incoming message.\r\nReliable.prototype._handleMessage = function(msg) {\r\n  var id = msg[1];\r\n  var idata = this._incoming[id];\r\n  var odata = this._outgoing[id];\r\n  var data;\r\n  switch (msg[0]) {\r\n    // No chunking was done.\r\n    case 'no':\r\n      var message = id;\r\n      if (!!message) {\r\n        this.onmessage(util.unpack(message));\r\n      }\r\n      break;\r\n    // Reached the end of the message.\r\n    case 'end':\r\n      data = idata;\r\n\r\n      // In case end comes first.\r\n      this._received[id] = msg[2];\r\n\r\n      if (!data) {\r\n        break;\r\n      }\r\n\r\n      this._ack(id);\r\n      break;\r\n    case 'ack':\r\n      data = odata;\r\n      if (!!data) {\r\n        var ack = msg[2];\r\n        // Take the larger ACK, for out of order messages.\r\n        data.ack = Math.max(ack, data.ack);\r\n\r\n        // Clean up when all chunks are ACKed.\r\n        if (data.ack >= data.chunks.length) {\r\n          util.log('Time: ', new Date() - data.timer);\r\n          delete this._outgoing[id];\r\n        } else {\r\n          this._processAcks();\r\n        }\r\n      }\r\n      // If !data, just ignore.\r\n      break;\r\n    // Received a chunk of data.\r\n    case 'chunk':\r\n      // Create a new entry if none exists.\r\n      data = idata;\r\n      if (!data) {\r\n        var end = this._received[id];\r\n        if (end === true) {\r\n          break;\r\n        }\r\n        data = {\r\n          ack: ['ack', id, 0],\r\n          chunks: []\r\n        };\r\n        this._incoming[id] = data;\r\n      }\r\n\r\n      var n = msg[2];\r\n      var chunk = msg[3];\r\n      data.chunks[n] = new Uint8Array(chunk);\r\n\r\n      // If we get the chunk we're looking for, ACK for next missing.\r\n      // Otherwise, ACK the same N again.\r\n      if (n === data.ack[2]) {\r\n        this._calculateNextAck(id);\r\n      }\r\n      this._ack(id);\r\n      break;\r\n    default:\r\n      // Shouldn't happen, but would make sense for message to just go\r\n      // through as is.\r\n      this._handleSend(msg);\r\n      break;\r\n  }\r\n};\r\n\r\n// Chunks BL into smaller messages.\r\nReliable.prototype._chunk = function(bl) {\r\n  var chunks = [];\r\n  var size = bl.size;\r\n  var start = 0;\r\n  while (start < size) {\r\n    var end = Math.min(size, start + this._mtu);\r\n    var b = bl.slice(start, end);\r\n    var chunk = {\r\n      payload: b\r\n    }\r\n    chunks.push(chunk);\r\n    start = end;\r\n  }\r\n  util.log('Created', chunks.length, 'chunks.');\r\n  return chunks;\r\n};\r\n\r\n// Sends ACK N, expecting Nth blob chunk for message ID.\r\nReliable.prototype._ack = function(id) {\r\n  var ack = this._incoming[id].ack;\r\n\r\n  // if ack is the end value, then call _complete.\r\n  if (this._received[id] === ack[2]) {\r\n    this._complete(id);\r\n    this._received[id] = true;\r\n  }\r\n\r\n  this._handleSend(ack);\r\n};\r\n\r\n// Calculates the next ACK number, given chunks.\r\nReliable.prototype._calculateNextAck = function(id) {\r\n  var data = this._incoming[id];\r\n  var chunks = data.chunks;\r\n  for (var i = 0, ii = chunks.length; i < ii; i += 1) {\r\n    // This chunk is missing!!! Better ACK for it.\r\n    if (chunks[i] === undefined) {\r\n      data.ack[2] = i;\r\n      return;\r\n    }\r\n  }\r\n  data.ack[2] = chunks.length;\r\n};\r\n\r\n// Sends the next window of chunks.\r\nReliable.prototype._sendWindowedChunks = function(id) {\r\n  util.log('sendWindowedChunks for: ', id);\r\n  var data = this._outgoing[id];\r\n  var ch = data.chunks;\r\n  var chunks = [];\r\n  var limit = Math.min(data.ack + this._window, ch.length);\r\n  for (var i = data.ack; i < limit; i += 1) {\r\n    if (!ch[i].sent || i === data.ack) {\r\n      ch[i].sent = true;\r\n      chunks.push(['chunk', id, i, ch[i].payload]);\r\n    }\r\n  }\r\n  if (data.ack + this._window >= ch.length) {\r\n    chunks.push(['end', id, ch.length])\r\n  }\r\n  chunks._multiple = true;\r\n  this._handleSend(chunks);\r\n};\r\n\r\n// Puts together a message from chunks.\r\nReliable.prototype._complete = function(id) {\r\n  util.log('Completed called for', id);\r\n  var self = this;\r\n  var chunks = this._incoming[id].chunks;\r\n  var bl = new Blob(chunks);\r\n  util.blobToArrayBuffer(bl, function(ab) {\r\n    self.onmessage(util.unpack(ab));\r\n  });\r\n  delete this._incoming[id];\r\n};\r\n\r\n// Ups bandwidth limit on SDP. Meant to be called during offer/answer.\r\nReliable.higherBandwidthSDP = function(sdp) {\r\n  // AS stands for Application-Specific Maximum.\r\n  // Bandwidth number is in kilobits / sec.\r\n  // See RFC for more info: http://www.ietf.org/rfc/rfc2327.txt\r\n\r\n  // Chrome 31+ doesn't want us munging the SDP, so we'll let them have their\r\n  // way.\r\n  var version = navigator.appVersion.match(/Chrome\\/(.*?) /);\r\n  if (version) {\r\n    version = parseInt(version[1].split('.').shift());\r\n    if (version < 31) {\r\n      var parts = sdp.split('b=AS:30');\r\n      var replace = 'b=AS:102400'; // 100 Mbps\r\n      if (parts.length > 1) {\r\n        return parts[0] + replace + parts[1];\r\n      }\r\n    }\r\n  }\r\n\r\n  return sdp;\r\n};\r\n\r\n// Overwritten, typically.\r\nReliable.prototype.onmessage = function(msg) {};\r\n\r\nmodule.exports = Reliable;\r\n","import { util } from \"./util\";\r\nimport { EventEmitter } from \"eventemitter3\";\r\nimport { Negotiator } from \"./negotiator\";\r\nimport { Reliable } from \"reliable\";\r\n\r\n/**\r\n * Wraps a DataChannel between two Peers.\r\n */\r\nexport function DataConnection(peer, provider, options) {\r\n  if (!(this instanceof DataConnection))\r\n    return new DataConnection(peer, provider, options);\r\n  EventEmitter.call(this);\r\n\r\n  this.options = util.extend(\r\n    {\r\n      serialization: \"binary\",\r\n      reliable: false\r\n    },\r\n    options\r\n  );\r\n\r\n  // Connection is not open yet.\r\n  this.open = false;\r\n  this.type = \"data\";\r\n  this.peer = peer;\r\n  this.provider = provider;\r\n\r\n  this.id =\r\n    this.options.connectionId || DataConnection._idPrefix + util.randomToken();\r\n\r\n  this.label = this.options.label || this.id;\r\n  this.metadata = this.options.metadata;\r\n  this.serialization = this.options.serialization;\r\n  this.reliable = this.options.reliable;\r\n\r\n  // Data channel buffering.\r\n  this._buffer = [];\r\n  this._buffering = false;\r\n  this.bufferSize = 0;\r\n\r\n  // For storing large data.\r\n  this._chunkedData = {};\r\n\r\n  if (this.options._payload) {\r\n    this._peerBrowser = this.options._payload.browser;\r\n  }\r\n\r\n  Negotiator.startConnection(\r\n    this,\r\n    this.options._payload || {\r\n      originator: true\r\n    }\r\n  );\r\n}\r\n\r\nutil.inherits(DataConnection, EventEmitter);\r\n\r\nDataConnection._idPrefix = \"dc_\";\r\n\r\n/** Called by the Negotiator when the DataChannel is ready. */\r\nDataConnection.prototype.initialize = function(dc) {\r\n  this._dc = this.dataChannel = dc;\r\n  this._configureDataChannel();\r\n};\r\n\r\nDataConnection.prototype._configureDataChannel = function() {\r\n  var self = this;\r\n  if (util.supports.sctp) {\r\n    this._dc.binaryType = \"arraybuffer\";\r\n  }\r\n  this._dc.onopen = function() {\r\n    util.log(\"Data channel connection success\");\r\n    self.open = true;\r\n    self.emit(\"open\");\r\n  };\r\n\r\n  // Use the Reliable shim for non Firefox browsers\r\n  if (!util.supports.sctp && this.reliable) {\r\n    this._reliable = new Reliable(this._dc, util.debug);\r\n  }\r\n\r\n  if (this._reliable) {\r\n    this._reliable.onmessage = function(msg) {\r\n      self.emit(\"data\", msg);\r\n    };\r\n  } else {\r\n    this._dc.onmessage = function(e) {\r\n      self._handleDataMessage(e);\r\n    };\r\n  }\r\n  this._dc.onclose = function(e) {\r\n    util.log(\"DataChannel closed for:\", self.peer);\r\n    self.close();\r\n  };\r\n};\r\n\r\n// Handles a DataChannel message.\r\nDataConnection.prototype._handleDataMessage = function(e) {\r\n  var self = this;\r\n  var data = e.data;\r\n  var datatype = data.constructor;\r\n  if (this.serialization === \"binary\" || this.serialization === \"binary-utf8\") {\r\n    if (datatype === Blob) {\r\n      // Datatype should never be blob\r\n      util.blobToArrayBuffer(data, function(ab) {\r\n        data = util.unpack(ab);\r\n        self.emit(\"data\", data);\r\n      });\r\n      return;\r\n    } else if (datatype === ArrayBuffer) {\r\n      data = util.unpack(data);\r\n    } else if (datatype === String) {\r\n      // String fallback for binary data for browsers that don't support binary yet\r\n      var ab = util.binaryStringToArrayBuffer(data);\r\n      data = util.unpack(ab);\r\n    }\r\n  } else if (this.serialization === \"json\") {\r\n    data = JSON.parse(data);\r\n  }\r\n\r\n  // Check if we've chunked--if so, piece things back together.\r\n  // We're guaranteed that this isn't 0.\r\n  if (data.__peerData) {\r\n    var id = data.__peerData;\r\n    var chunkInfo = this._chunkedData[id] || {\r\n      data: [],\r\n      count: 0,\r\n      total: data.total\r\n    };\r\n\r\n    chunkInfo.data[data.n] = data.data;\r\n    chunkInfo.count += 1;\r\n\r\n    if (chunkInfo.total === chunkInfo.count) {\r\n      // Clean up before making the recursive call to `_handleDataMessage`.\r\n      delete this._chunkedData[id];\r\n\r\n      // We've received all the chunks--time to construct the complete data.\r\n      data = new Blob(chunkInfo.data);\r\n      this._handleDataMessage({ data: data });\r\n    }\r\n\r\n    this._chunkedData[id] = chunkInfo;\r\n    return;\r\n  }\r\n\r\n  this.emit(\"data\", data);\r\n};\r\n\r\n/**\r\n * Exposed functionality for users.\r\n */\r\n\r\n/** Allows user to close connection. */\r\nDataConnection.prototype.close = function() {\r\n  if (!this.open) {\r\n    return;\r\n  }\r\n  this.open = false;\r\n  Negotiator.cleanup(this);\r\n  this.emit(\"close\");\r\n};\r\n\r\n/** Allows user to send data. */\r\nDataConnection.prototype.send = function(data, chunked) {\r\n  if (!this.open) {\r\n    this.emit(\r\n      \"error\",\r\n      new Error(\r\n        \"Connection is not open. You should listen for the `open` event before sending messages.\"\r\n      )\r\n    );\r\n    return;\r\n  }\r\n  if (this._reliable) {\r\n    // Note: reliable shim sending will make it so that you cannot customize\r\n    // serialization.\r\n    this._reliable.send(data);\r\n    return;\r\n  }\r\n  var self = this;\r\n  if (this.serialization === \"json\") {\r\n    this._bufferedSend(JSON.stringify(data));\r\n  } else if (\r\n    this.serialization === \"binary\" ||\r\n    this.serialization === \"binary-utf8\"\r\n  ) {\r\n    var blob = util.pack(data);\r\n\r\n    // For Chrome-Firefox interoperability, we need to make Firefox \"chunk\"\r\n    // the data it sends out.\r\n    var needsChunking =\r\n      util.chunkedBrowsers[this._peerBrowser] ||\r\n      util.chunkedBrowsers[util.browser];\r\n    if (needsChunking && !chunked && blob.size > util.chunkedMTU) {\r\n      this._sendChunks(blob);\r\n      return;\r\n    }\r\n\r\n    // DataChannel currently only supports strings.\r\n    if (!util.supports.sctp) {\r\n      util.blobToBinaryString(blob, function(str) {\r\n        self._bufferedSend(str);\r\n      });\r\n    } else if (!util.supports.binaryBlob) {\r\n      // We only do this if we really need to (e.g. blobs are not supported),\r\n      // because this conversion is costly.\r\n      util.blobToArrayBuffer(blob, function(ab) {\r\n        self._bufferedSend(ab);\r\n      });\r\n    } else {\r\n      this._bufferedSend(blob);\r\n    }\r\n  } else {\r\n    this._bufferedSend(data);\r\n  }\r\n};\r\n\r\nDataConnection.prototype._bufferedSend = function(msg) {\r\n  if (this._buffering || !this._trySend(msg)) {\r\n    this._buffer.push(msg);\r\n    this.bufferSize = this._buffer.length;\r\n  }\r\n};\r\n\r\n// Returns true if the send succeeds.\r\nDataConnection.prototype._trySend = function(msg) {\r\n  try {\r\n    this._dc.send(msg);\r\n  } catch (e) {\r\n    this._buffering = true;\r\n\r\n    var self = this;\r\n    setTimeout(function() {\r\n      // Try again.\r\n      self._buffering = false;\r\n      self._tryBuffer();\r\n    }, 100);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n// Try to send the first message in the buffer.\r\nDataConnection.prototype._tryBuffer = function() {\r\n  if (this._buffer.length === 0) {\r\n    return;\r\n  }\r\n\r\n  var msg = this._buffer[0];\r\n\r\n  if (this._trySend(msg)) {\r\n    this._buffer.shift();\r\n    this.bufferSize = this._buffer.length;\r\n    this._tryBuffer();\r\n  }\r\n};\r\n\r\nDataConnection.prototype._sendChunks = function(blob) {\r\n  var blobs = util.chunk(blob);\r\n  for (var i = 0, ii = blobs.length; i < ii; i += 1) {\r\n    var blob = blobs[i];\r\n    this.send(blob, true);\r\n  }\r\n};\r\n\r\nDataConnection.prototype.handleMessage = function(message) {\r\n  var payload = message.payload;\r\n\r\n  switch (message.type) {\r\n    case \"ANSWER\":\r\n      this._peerBrowser = payload.browser;\r\n\r\n      // Forward to negotiator\r\n      Negotiator.handleSDP(message.type, this, payload.sdp);\r\n      break;\r\n    case \"CANDIDATE\":\r\n      Negotiator.handleCandidate(this, payload.candidate);\r\n      break;\r\n    default:\r\n      util.warn(\r\n        \"Unrecognized message type:\",\r\n        message.type,\r\n        \"from peer:\",\r\n        this.peer\r\n      );\r\n      break;\r\n  }\r\n};\r\n","import { util } from \"./util\";\r\nimport { EventEmitter } from \"eventemitter3\";\r\nimport { Socket } from \"./socket\";\r\nimport { MediaConnection } from \"./mediaconnection\";\r\nimport { DataConnection } from \"./dataconnection\";\r\n\r\n/**\r\n * A peer who can initiate connections with other peers.\r\n */\r\nexport function Peer(id, options): void {\r\n  if (!(this instanceof Peer)) return new Peer(id, options);\r\n  EventEmitter.call(this);\r\n\r\n  // Deal with overloading\r\n  if (id && id.constructor == Object) {\r\n    options = id;\r\n    id = undefined;\r\n  } else if (id) {\r\n    // Ensure id is a string\r\n    id = id.toString();\r\n  }\r\n  //\r\n\r\n  // Configurize options\r\n  options = util.extend(\r\n    {\r\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\r\n      host: util.CLOUD_HOST,\r\n      port: util.CLOUD_PORT,\r\n      path: \"/\",\r\n      token: util.randomToken(),\r\n      config: util.defaultConfig\r\n    },\r\n    options\r\n  );\r\n  options.key = \"peerjs\";\r\n  this.options = options;\r\n  // Detect relative URL host.\r\n  if (options.host === \"/\") {\r\n    options.host = window.location.hostname;\r\n  }\r\n  // Set path correctly.\r\n  if (options.path[0] !== \"/\") {\r\n    options.path = \"/\" + options.path;\r\n  }\r\n  if (options.path[options.path.length - 1] !== \"/\") {\r\n    options.path += \"/\";\r\n  }\r\n\r\n  // Set whether we use SSL to same as current host\r\n  if (options.secure === undefined && options.host !== util.CLOUD_HOST) {\r\n    options.secure = util.isSecure();\r\n  } else if (options.host == util.CLOUD_HOST) {\r\n    options.secure = true;\r\n  }\r\n  // Set a custom log function if present\r\n  if (options.logFunction) {\r\n    util.setLogFunction(options.logFunction);\r\n  }\r\n  util.setLogLevel(options.debug);\r\n  //\r\n\r\n  // Sanity checks\r\n  // Ensure WebRTC supported\r\n  if (!util.supports.audioVideo && !util.supports.data) {\r\n    this._delayedAbort(\r\n      \"browser-incompatible\",\r\n      \"The current browser does not support WebRTC\"\r\n    );\r\n    return;\r\n  }\r\n  // Ensure alphanumeric id\r\n  if (!util.validateId(id)) {\r\n    this._delayedAbort(\"invalid-id\", 'ID \"' + id + '\" is invalid');\r\n    return;\r\n  }\r\n  // Ensure valid key\r\n  // if (!util.validateKey(options.key)) {\r\n  //   this._delayedAbort(\r\n  //     \"invalid-key\",\r\n  //     'API KEY \"' + options.key + '\" is invalid'\r\n  //   );\r\n  //   return;\r\n  // }\r\n  // Ensure not using unsecure cloud server on SSL page\r\n  // if (options.secure && options.host === \"0.peerjs.com\") {\r\n  //   this._delayedAbort(\r\n  //     \"ssl-unavailable\",\r\n  //     \"The cloud server currently does not support HTTPS. Please run your own PeerServer to use HTTPS.\"\r\n  //   );\r\n  //   return;\r\n  // }\r\n  //\r\n\r\n  // States.\r\n  this.destroyed = false; // Connections have been killed\r\n  this.disconnected = false; // Connection to PeerServer killed but P2P connections still active\r\n  this.open = false; // Sockets and such are not yet open.\r\n  //\r\n\r\n  // References\r\n  this.connections = {}; // DataConnections for this peer.\r\n  this._lostMessages = {}; // src => [list of messages]\r\n  //\r\n\r\n  // Start the server connection\r\n  this._initializeServerConnection();\r\n  if (id) {\r\n    this._initialize(id);\r\n  } else {\r\n    this._retrieveId();\r\n  }\r\n  //\r\n}\r\n\r\nutil.inherits(Peer, EventEmitter);\r\n\r\n// Initialize the 'socket' (which is actually a mix of XHR streaming and\r\n// websockets.)\r\nPeer.prototype._initializeServerConnection = function() {\r\n  var self = this;\r\n  this.socket = new Socket(\r\n    this.options.secure,\r\n    this.options.host,\r\n    this.options.port,\r\n    this.options.path,\r\n    this.options.key,\r\n    this.options.wsport\r\n  );\r\n  this.socket.on(\"message\", function(data) {\r\n    self._handleMessage(data);\r\n  });\r\n  this.socket.on(\"error\", function(error) {\r\n    self._abort(\"socket-error\", error);\r\n  });\r\n  this.socket.on(\"disconnected\", function() {\r\n    // If we haven't explicitly disconnected, emit error and disconnect.\r\n    if (!self.disconnected) {\r\n      self.emitError(\"network\", \"Lost connection to server.\");\r\n      self.disconnect();\r\n    }\r\n  });\r\n  this.socket.on(\"close\", function() {\r\n    // If we haven't explicitly disconnected, emit error.\r\n    if (!self.disconnected) {\r\n      self._abort(\"socket-closed\", \"Underlying socket is already closed.\");\r\n    }\r\n  });\r\n};\r\n\r\n/** Get a unique ID from the server via XHR. */\r\nPeer.prototype._retrieveId = function(cb) {\r\n  var self = this;\r\n  var http = new XMLHttpRequest();\r\n  var protocol = this.options.secure ? \"https://\" : \"http://\";\r\n  var url =\r\n    protocol +\r\n    this.options.host +\r\n    \":\" +\r\n    this.options.port +\r\n    this.options.path +\r\n    this.options.key +\r\n    \"/id\";\r\n  var queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\r\n  url += queryString;\r\n\r\n  // If there's no ID we need to wait for one before trying to init socket.\r\n  http.open(\"get\", url, true);\r\n  http.onerror = function(e) {\r\n    util.error(\"Error retrieving ID\", e);\r\n    var pathError = \"\";\r\n    if (self.options.path === \"/\" && self.options.host !== util.CLOUD_HOST) {\r\n      pathError =\r\n        \" If you passed in a `path` to your self-hosted PeerServer, \" +\r\n        \"you'll also need to pass in that same path when creating a new \" +\r\n        \"Peer.\";\r\n    }\r\n    self._abort(\r\n      \"server-error\",\r\n      \"Could not get an ID from the server.\" + pathError\r\n    );\r\n  };\r\n  http.onreadystatechange = function() {\r\n    if (http.readyState !== 4) {\r\n      return;\r\n    }\r\n    if (http.status !== 200) {\r\n      http.onerror();\r\n      return;\r\n    }\r\n    self._initialize(http.responseText);\r\n  };\r\n  http.send(null);\r\n};\r\n\r\n/** Initialize a connection with the server. */\r\nPeer.prototype._initialize = function(id) {\r\n  this.id = id;\r\n  this.socket.start(this.id, this.options.token);\r\n};\r\n\r\n/** Handles messages from the server. */\r\nPeer.prototype._handleMessage = function(message) {\r\n  var type = message.type;\r\n  var payload = message.payload;\r\n  var peer = message.src;\r\n  var connection;\r\n\r\n  switch (type) {\r\n    case \"OPEN\": // The connection to the server is open.\r\n      this.emit(\"open\", this.id);\r\n      this.open = true;\r\n      break;\r\n    case \"ERROR\": // Server error.\r\n      this._abort(\"server-error\", payload.msg);\r\n      break;\r\n    case \"ID-TAKEN\": // The selected ID is taken.\r\n      this._abort(\"unavailable-id\", \"ID `\" + this.id + \"` is taken\");\r\n      break;\r\n    case \"INVALID-KEY\": // The given API key cannot be found.\r\n      this._abort(\r\n        \"invalid-key\",\r\n        'API KEY \"' + this.options.key + '\" is invalid'\r\n      );\r\n      break;\r\n\r\n    //\r\n    case \"LEAVE\": // Another peer has closed its connection to this peer.\r\n      util.log(\"Received leave message from\", peer);\r\n      this._cleanupPeer(peer);\r\n      break;\r\n\r\n    case \"EXPIRE\": // The offer sent to a peer has expired without response.\r\n      this.emitError(\"peer-unavailable\", \"Could not connect to peer \" + peer);\r\n      break;\r\n    case \"OFFER\": // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\r\n      var connectionId = payload.connectionId;\r\n      connection = this.getConnection(peer, connectionId);\r\n\r\n      if (connection) {\r\n        connection.close();\r\n        util.warn(\"Offer received for existing Connection ID:\", connectionId);\r\n      }\r\n\r\n      // Create a new connection.\r\n      if (payload.type === \"media\") {\r\n        connection = new MediaConnection(peer, this, {\r\n          connectionId: connectionId,\r\n          _payload: payload,\r\n          metadata: payload.metadata\r\n        });\r\n        this._addConnection(peer, connection);\r\n        this.emit(\"call\", connection);\r\n      } else if (payload.type === \"data\") {\r\n        connection = new DataConnection(peer, this, {\r\n          connectionId: connectionId,\r\n          _payload: payload,\r\n          metadata: payload.metadata,\r\n          label: payload.label,\r\n          serialization: payload.serialization,\r\n          reliable: payload.reliable\r\n        });\r\n        this._addConnection(peer, connection);\r\n        this.emit(\"connection\", connection);\r\n      } else {\r\n        util.warn(\"Received malformed connection type:\", payload.type);\r\n        return;\r\n      }\r\n      // Find messages.\r\n      var messages = this._getMessages(connectionId);\r\n      for (var i = 0, ii = messages.length; i < ii; i += 1) {\r\n        connection.handleMessage(messages[i]);\r\n      }\r\n\r\n      break;\r\n    case \"DATA\":\r\n      this.emit(\"data\", payload);\r\n      break;\r\n    default:\r\n      if (!payload) {\r\n        util.warn(\r\n          \"You received a malformed message from \" + peer + \" of type \" + type\r\n        );\r\n        return;\r\n      }\r\n\r\n      var id = payload.connectionId;\r\n      connection = this.getConnection(peer, id);\r\n\r\n      if (connection && connection.pc) {\r\n        // Pass it on.\r\n        connection.handleMessage(message);\r\n      } else if (id) {\r\n        // Store for possible later use\r\n        this._storeMessage(id, message);\r\n      } else {\r\n        util.warn(\"You received an unrecognized message:\", message);\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\n/** Stores messages without a set up connection, to be claimed later. */\r\nPeer.prototype._storeMessage = function(connectionId, message) {\r\n  if (!this._lostMessages[connectionId]) {\r\n    this._lostMessages[connectionId] = [];\r\n  }\r\n  this._lostMessages[connectionId].push(message);\r\n};\r\n\r\n/** Retrieve messages from lost message store */\r\nPeer.prototype._getMessages = function(connectionId) {\r\n  var messages = this._lostMessages[connectionId];\r\n  if (messages) {\r\n    delete this._lostMessages[connectionId];\r\n    return messages;\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Returns a DataConnection to the specified peer. See documentation for a\r\n * complete list of options.\r\n */\r\nPeer.prototype.connect = function(peer, options) {\r\n  if (this.disconnected) {\r\n    util.warn(\r\n      \"You cannot connect to a new Peer because you called \" +\r\n        \".disconnect() on this Peer and ended your connection with the \" +\r\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\r\n        \"on this peer if you believe its ID to still be available.\"\r\n    );\r\n    this.emitError(\r\n      \"disconnected\",\r\n      \"Cannot connect to new Peer after disconnecting from server.\"\r\n    );\r\n    return;\r\n  }\r\n  var connection = new DataConnection(peer, this, options);\r\n  this._addConnection(peer, connection);\r\n  return connection;\r\n};\r\n\r\n/**\r\n * Returns a MediaConnection to the specified peer. See documentation for a\r\n * complete list of options.\r\n */\r\nPeer.prototype.call = function(peer, stream, options) {\r\n  if (this.disconnected) {\r\n    util.warn(\r\n      \"You cannot connect to a new Peer because you called \" +\r\n        \".disconnect() on this Peer and ended your connection with the \" +\r\n        \"server. You can create a new Peer to reconnect.\"\r\n    );\r\n    this.emitError(\r\n      \"disconnected\",\r\n      \"Cannot connect to new Peer after disconnecting from server.\"\r\n    );\r\n    return;\r\n  }\r\n  if (!stream) {\r\n    util.error(\r\n      \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\r\n    );\r\n    return;\r\n  }\r\n  options = options || {};\r\n  options._stream = stream;\r\n  var call = new MediaConnection(peer, this, options);\r\n  this._addConnection(peer, call);\r\n  return call;\r\n};\r\n\r\n/** Add a data/media connection to this peer. */\r\nPeer.prototype._addConnection = function(peer, connection) {\r\n  if (!this.connections[peer]) {\r\n    this.connections[peer] = [];\r\n  }\r\n  this.connections[peer].push(connection);\r\n};\r\n\r\n/** Retrieve a data/media connection for this peer. */\r\nPeer.prototype.getConnection = function(peer, id) {\r\n  var connections = this.connections[peer];\r\n  if (!connections) {\r\n    return null;\r\n  }\r\n  for (var i = 0, ii = connections.length; i < ii; i++) {\r\n    if (connections[i].id === id) {\r\n      return connections[i];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nPeer.prototype._delayedAbort = function(type, message) {\r\n  var self = this;\r\n  util.setZeroTimeout(function() {\r\n    self._abort(type, message);\r\n  });\r\n};\r\n\r\n/**\r\n * Destroys the Peer and emits an error message.\r\n * The Peer is not destroyed if it's in a disconnected state, in which case\r\n * it retains its disconnected state and its existing connections.\r\n */\r\nPeer.prototype._abort = function(type, message) {\r\n  util.error(\"Aborting!\");\r\n  if (!this._lastServerId) {\r\n    this.destroy();\r\n  } else {\r\n    this.disconnect();\r\n  }\r\n  this.emitError(type, message);\r\n};\r\n\r\n/** Emits a typed error message. */\r\nPeer.prototype.emitError = function(type, err) {\r\n  util.error(\"Error:\", err);\r\n  if (typeof err === \"string\") {\r\n    err = new Error(err);\r\n  }\r\n  err.type = type;\r\n  this.emit(\"error\", err);\r\n};\r\n\r\n/**\r\n * Destroys the Peer: closes all active connections as well as the connection\r\n *  to the server.\r\n * Warning: The peer can no longer create or accept connections after being\r\n *  destroyed.\r\n */\r\nPeer.prototype.destroy = function() {\r\n  if (!this.destroyed) {\r\n    this._cleanup();\r\n    this.disconnect();\r\n    this.destroyed = true;\r\n  }\r\n};\r\n\r\n/** Disconnects every connection on this peer. */\r\nPeer.prototype._cleanup = function() {\r\n  if (this.connections) {\r\n    var peers = Object.keys(this.connections);\r\n    for (var i = 0, ii = peers.length; i < ii; i++) {\r\n      this._cleanupPeer(peers[i]);\r\n    }\r\n  }\r\n  this.emit(\"close\");\r\n};\r\n\r\n/** Closes all connections to this peer. */\r\nPeer.prototype._cleanupPeer = function(peer) {\r\n  var connections = this.connections[peer];\r\n  for (var j = 0, jj = connections.length; j < jj; j += 1) {\r\n    connections[j].close();\r\n  }\r\n};\r\n\r\n/**\r\n * Disconnects the Peer's connection to the PeerServer. Does not close any\r\n *  active connections.\r\n * Warning: The peer can no longer create or accept connections after being\r\n *  disconnected. It also cannot reconnect to the server.\r\n */\r\nPeer.prototype.disconnect = function() {\r\n  var self = this;\r\n  util.setZeroTimeout(function() {\r\n    if (!self.disconnected) {\r\n      self.disconnected = true;\r\n      self.open = false;\r\n      if (self.socket) {\r\n        self.socket.close();\r\n      }\r\n      self.emit(\"disconnected\", self.id);\r\n      self._lastServerId = self.id;\r\n      self.id = null;\r\n    }\r\n  });\r\n};\r\n\r\n/** Attempts to reconnect with the same ID. */\r\nPeer.prototype.reconnect = function() {\r\n  if (this.disconnected && !this.destroyed) {\r\n    util.log(\"Attempting reconnection to server with ID \" + this._lastServerId);\r\n    this.disconnected = false;\r\n    this._initializeServerConnection();\r\n    this._initialize(this._lastServerId);\r\n  } else if (this.destroyed) {\r\n    throw new Error(\r\n      \"This peer cannot reconnect to the server. It has already been destroyed.\"\r\n    );\r\n  } else if (!this.disconnected && !this.open) {\r\n    // Do nothing. We're still connecting the first time.\r\n    util.error(\r\n      \"In a hurry? We're still trying to make the initial connection!\"\r\n    );\r\n  } else {\r\n    throw new Error(\r\n      \"Peer \" +\r\n        this.id +\r\n        \" cannot reconnect because it is not disconnected from the server!\"\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Get a list of available peer IDs. If you're running your own server, you'll\r\n * want to set allow_discovery: true in the PeerServer options. If you're using\r\n * the cloud server, email team@peerjs.com to get the functionality enabled for\r\n * your key.\r\n */\r\nPeer.prototype.listAllPeers = function(cb) {\r\n  cb = cb || function() {};\r\n  var self = this;\r\n  var http = new XMLHttpRequest();\r\n  var protocol = this.options.secure ? \"https://\" : \"http://\";\r\n  var url =\r\n    protocol +\r\n    this.options.host +\r\n    \":\" +\r\n    this.options.port +\r\n    this.options.path +\r\n    this.options.key +\r\n    \"/peers\";\r\n  var queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\r\n  url += queryString;\r\n\r\n  // If there's no ID we need to wait for one before trying to init socket.\r\n  http.open(\"get\", url, true);\r\n  http.onerror = function(e) {\r\n    self._abort(\"server-error\", \"Could not get peers from the server.\");\r\n    cb([]);\r\n  };\r\n  http.onreadystatechange = function() {\r\n    if (http.readyState !== 4) {\r\n      return;\r\n    }\r\n    if (http.status === 401) {\r\n      var helpfulError = \"\";\r\n      if (self.options.host !== util.CLOUD_HOST) {\r\n        helpfulError =\r\n          \"It looks like you're using the cloud server. You can email \" +\r\n          \"team@peerjs.com to enable peer listing for your API key.\";\r\n      } else {\r\n        helpfulError =\r\n          \"You need to enable `allow_discovery` on your self-hosted \" +\r\n          \"PeerServer to use this feature.\";\r\n      }\r\n      cb([]);\r\n      throw new Error(\r\n        \"It doesn't look like you have permission to list peers IDs. \" +\r\n          helpfulError\r\n      );\r\n    } else if (http.status !== 200) {\r\n      cb([]);\r\n    } else {\r\n      cb(JSON.parse(http.responseText));\r\n    }\r\n  };\r\n  http.send(null);\r\n};\r\n","import { util } from \"./util\";\r\nimport {\r\n  RTCPeerConnection,\r\n  RTCSessionDescription,\r\n  RTCIceCandidate\r\n} from \"./adapter\";\r\nimport { Socket } from \"./socket\";\r\nimport { MediaConnection } from \"./mediaconnection\";\r\nimport { DataConnection } from \"./dataconnection\";\r\nimport { Peer } from \"./peer\";\r\nimport { Negotiator } from \"./negotiator\";\r\nimport jsBinarypack from \"js-binarypack\";\r\n\r\nwindow.Socket = Socket;\r\nwindow.MediaConnection = MediaConnection;\r\nwindow.DataConnection = DataConnection;\r\nwindow.Peer = Peer;\r\nwindow.RTCPeerConnection = RTCPeerConnection;\r\nwindow.RTCSessionDescription = RTCSessionDescription;\r\nwindow.RTCIceCandidate = RTCIceCandidate;\r\nwindow.Negotiator = Negotiator;\r\nwindow.util = util;\r\nwindow.BinaryPack = jsBinarypack;\r\n\r\nexport default Peer"]}